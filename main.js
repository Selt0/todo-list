(()=>{"use strict";var n={426:(n,t,e)=>{e.d(t,{Z:()=>i});var o=e(537),r=e.n(o),a=e(645),c=e.n(a)()(r());c.push([n.id,":root {\n    --secondary-dark: #21212b;\n    --main-dark: #181820;\n    --pink: #fc76a1;\n    --main-text-color: #d5d5d7;\n    --secondary-text-color: #a7a7ab;\n    --project-text-color: #e2e2e3;\n    --active: #383846;\n    --active-hover: #272732;\n}\n* {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n\n.main {\n    font-size: 18px;\n    display: flex;\n    min-height: 100vh;\n    background-color: var(--main-dark);\n}\n\n/* PROJECT SIDEBAR */\n\n.sidebar {\n    background-color: var(--secondary-dark);\n    min-width: 250px;\n    width: 350px;\n    color: var(--project-text-color)\n}\n\n.sidebar h2 {\n     margin: 25px;\n    color: var(--secondary-text-color);\n}\n\n.project {\n    display: flex;\n    padding: 25px;\n    justify-content: space-between;\n}\n\n.project:hover {\n    cursor: pointer;\n    background-color: var(--active-hover);\n}\n\n.project-info {\n    pointer-events: none;\n}\n\n.active {\n    background-color: var(--active);\n}\n\n.sidebar .project-title {\n    margin-left: 10px;\n    margin-right: 10px;\n    font-weight: 700;\n}\n\n.add-project {\n    display: flex;\n    flex-direction: column;\n    padding: 25px;\n}\n\n/* TASKS */\n.container {\n    width: 50%;\n}\n\n.tasks {\n    color: var(--main-text-color);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    margin-top: 100px;\n    position: relative;\n}\n\n.tasks-container {\n    margin-bottom: 30px;\n}\n\n.tasks .project-title {\n    color: #fff;\n    margin-bottom: 30px;\n}\n\n.counter {\n    margin-bottom: 15px;\n}\n\n.tasks-container .card:hover {\n    background-color: var(--active-hover);\n    cursor: pointer;\n}   \n\n.card {\n    display: flex;\n    background-color: var(--secondary-dark);\n    border-radius: 15px;\n    margin-bottom: 10px;\n    padding: 15px;\n}\n\n.task-details {\n    font-size: .9rem;\n    color: var(--secondary-text-color);\n}\n\n.completed {\n    text-decoration: line-through;\n    text-decoration-color: #fff;\n    text-decoration-thickness: 1.5px;\n}\n\n/* FORM BUTTONS/CONTROL */\n\n.btn {\n    display: flex;\n    align-items: center;\n    border: 2px solid var(--secondary-dark);\n    padding: 15px;\n    background-color: var(--main-dark);\n    color: var(--main-text-color);\n    cursor: pointer;\n    border-radius: 10px;\n}\n\n.btn:hover {\n    background-color: var(--active-hover);\n}\n\n.project:hover .modify-buttons,\n.card:hover .modify-buttons{\n    display: block;\n}\n\n.modify-buttons {\n    display: none;\n    margin-left: auto;\n    align-self: center;\n}\n\n.modify-buttons i:hover {\n color: var(--pink)\n}\n\n.add-icon {\n    width: 30px;\n    height: 30px;\n    color: var(--main-dark);\n    background-color: var(--pink);\n    border-radius: 10px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-right: 10px;\n}\n\n.add-task .btn{\n    width: 100%;\n}\n\n.add-task {\n    padding: 0;\n    margin-bottom: 30px;\n}\n\n.checkbox {\n    width: 18px;\n    height: 18px;\n    border: 2px solid var(--pink);\n    border-radius: 5px;\n    margin-right: 10px;\n}\n\n.checkbox:hover {\n    cursor: pointer;\n}\n\n.checked {\n    color: var(--main-dark);\n    background-color: var(--pink);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.popout-btns {\n    display: flex;\n    gap: 20px;\n    justify-content: center;\n}\n\n.popout-btns button {\n    width: 100px;\n    height: 30px;\n    padding: 5px;\n}\n\n.projectForm {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.project-input, .task-input {\n    height: 35px;\n    padding: 5px;\n    margin-bottom: 10px;\n    border-radius: 5px;\n}\n\n.taskForm {\n    width: 100%;\n    padding: 15px;\n}\n\n.task-input {\n    width: 100%;\n}\n\n.fa-check {\n    pointer-events: none;\n}\n\n/* FORM / POPOUT TASK DETAILS */\n.detailsForm {\n    letter-spacing: 1px;\n    color: black;\n    position: absolute;\n    padding: 15px;\n    min-width: 500px;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: #fff;\n    border-radius: 15px;\n}\n\n.form-control {\n    margin-top: 15px;\n    margin-bottom: 15px;\n}\n\ntextarea {\n    padding: 10px;\n    max-width: 100%;\n    line-height: 1.5;\n    border-radius: 5px;\n    border: 1px solid #ccc;\n    box-shadow: 1px 1px 1px #999;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:[":root {\n    --secondary-dark: #21212b;\n    --main-dark: #181820;\n    --pink: #fc76a1;\n    --main-text-color: #d5d5d7;\n    --secondary-text-color: #a7a7ab;\n    --project-text-color: #e2e2e3;\n    --active: #383846;\n    --active-hover: #272732;\n}\n* {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n\n.main {\n    font-size: 18px;\n    display: flex;\n    min-height: 100vh;\n    background-color: var(--main-dark);\n}\n\n/* PROJECT SIDEBAR */\n\n.sidebar {\n    background-color: var(--secondary-dark);\n    min-width: 250px;\n    width: 350px;\n    color: var(--project-text-color)\n}\n\n.sidebar h2 {\n     margin: 25px;\n    color: var(--secondary-text-color);\n}\n\n.project {\n    display: flex;\n    padding: 25px;\n    justify-content: space-between;\n}\n\n.project:hover {\n    cursor: pointer;\n    background-color: var(--active-hover);\n}\n\n.project-info {\n    pointer-events: none;\n}\n\n.active {\n    background-color: var(--active);\n}\n\n.sidebar .project-title {\n    margin-left: 10px;\n    margin-right: 10px;\n    font-weight: 700;\n}\n\n.add-project {\n    display: flex;\n    flex-direction: column;\n    padding: 25px;\n}\n\n/* TASKS */\n.container {\n    width: 50%;\n}\n\n.tasks {\n    color: var(--main-text-color);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    margin-top: 100px;\n    position: relative;\n}\n\n.tasks-container {\n    margin-bottom: 30px;\n}\n\n.tasks .project-title {\n    color: #fff;\n    margin-bottom: 30px;\n}\n\n.counter {\n    margin-bottom: 15px;\n}\n\n.tasks-container .card:hover {\n    background-color: var(--active-hover);\n    cursor: pointer;\n}   \n\n.card {\n    display: flex;\n    background-color: var(--secondary-dark);\n    border-radius: 15px;\n    margin-bottom: 10px;\n    padding: 15px;\n}\n\n.task-details {\n    font-size: .9rem;\n    color: var(--secondary-text-color);\n}\n\n.completed {\n    text-decoration: line-through;\n    text-decoration-color: #fff;\n    text-decoration-thickness: 1.5px;\n}\n\n/* FORM BUTTONS/CONTROL */\n\n.btn {\n    display: flex;\n    align-items: center;\n    border: 2px solid var(--secondary-dark);\n    padding: 15px;\n    background-color: var(--main-dark);\n    color: var(--main-text-color);\n    cursor: pointer;\n    border-radius: 10px;\n}\n\n.btn:hover {\n    background-color: var(--active-hover);\n}\n\n.project:hover .modify-buttons,\n.card:hover .modify-buttons{\n    display: block;\n}\n\n.modify-buttons {\n    display: none;\n    margin-left: auto;\n    align-self: center;\n}\n\n.modify-buttons i:hover {\n color: var(--pink)\n}\n\n.add-icon {\n    width: 30px;\n    height: 30px;\n    color: var(--main-dark);\n    background-color: var(--pink);\n    border-radius: 10px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-right: 10px;\n}\n\n.add-task .btn{\n    width: 100%;\n}\n\n.add-task {\n    padding: 0;\n    margin-bottom: 30px;\n}\n\n.checkbox {\n    width: 18px;\n    height: 18px;\n    border: 2px solid var(--pink);\n    border-radius: 5px;\n    margin-right: 10px;\n}\n\n.checkbox:hover {\n    cursor: pointer;\n}\n\n.checked {\n    color: var(--main-dark);\n    background-color: var(--pink);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.popout-btns {\n    display: flex;\n    gap: 20px;\n    justify-content: center;\n}\n\n.popout-btns button {\n    width: 100px;\n    height: 30px;\n    padding: 5px;\n}\n\n.projectForm {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.project-input, .task-input {\n    height: 35px;\n    padding: 5px;\n    margin-bottom: 10px;\n    border-radius: 5px;\n}\n\n.taskForm {\n    width: 100%;\n    padding: 15px;\n}\n\n.task-input {\n    width: 100%;\n}\n\n.fa-check {\n    pointer-events: none;\n}\n\n/* FORM / POPOUT TASK DETAILS */\n.detailsForm {\n    letter-spacing: 1px;\n    color: black;\n    position: absolute;\n    padding: 15px;\n    min-width: 500px;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: #fff;\n    border-radius: 15px;\n}\n\n.form-control {\n    margin-top: 15px;\n    margin-bottom: 15px;\n}\n\ntextarea {\n    padding: 10px;\n    max-width: 100%;\n    line-height: 1.5;\n    border-radius: 5px;\n    border: 1px solid #ccc;\n    box-shadow: 1px 1px 1px #999;\n}"],sourceRoot:""}]);const i=c},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var c={};if(o)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(c[s]=!0)}for(var A=0;A<n.length;A++){var d=[].concat(n[A]);o&&c[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),e&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=e):d[2]=e),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),t.push(d))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),c=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[t].concat(c).concat([a]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var a={},c=[],i=0;i<n.length;i++){var s=n[i],A=o.base?s[0]+o.base:s[0],d=a[A]||0,l="".concat(A," ").concat(d);a[A]=d+1;var p=e(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var m=r(u,o);o.byIndex=i,t.splice(i,0,{identifier:l,updater:m,references:1})}c.push(l)}return c}function r(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var c=0;c<a.length;c++){var i=e(a[c]);t[i].references--}for(var s=o(n,r),A=0;A<a.length;A++){var d=e(a[A]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}a=s}}},569:n=>{var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,r&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return n[o](a,a.exports,e),a.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),e.nc=void 0,(()=>{var n=e(379),t=e.n(n),o=e(795),r=e.n(o),a=e(569),c=e.n(a),i=e(565),s=e.n(i),A=e(216),d=e.n(A),l=e(589),p=e.n(l),u=e(426),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=c().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=d(),t()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;class C{constructor(n){this.title=n,this.tasks=[],C.allProjects.push(this)}static allProjects=[];static containsProject(n){return C.allProjects.some((t=>t.title===n))}static getProject(n){return C.allProjects.find((t=>t.title===n))}static removeProject(n){C.allProjects=C.allProjects.filter((t=>t.title!==n))}static setAllProjects(n){C.allProjects=n}setTasks(n){this.tasks=n}get todoLength(){return this.tasks.filter((n=>!n.completed)).length}get completedLength(){return this.tasks.filter((n=>n.completed)).length}get todoTasks(){return this.tasks.filter((n=>!n.completed))}get completedTasks(){return this.tasks.filter((n=>n.completed))}getTask(n){return this.tasks.find((({id:t})=>t===n))}setTask(n){this.tasks.push(n)}removeTask(n){this.tasks=this.tasks.filter((t=>t.id!=n))}}let f=0;class B{constructor(n){this.title=n,this.completed=!1,this.id=f++,this.priority="none",this.notes=""}setTitle(n){this.title=n}getDueDate(){if(this.dueDate)return this.dueDate}setDueDate(n){this.dueDate=n}setPriority(n){this.priority=n}setNotes(n){this.notes=n}toggleCompletion(){this.completed?this.completed=!1:this.completed=!0}}const g=(()=>{const n=document.querySelector(".project-container"),t=document.querySelector(".add-project"),e=document.querySelector("#add-project"),o=document.querySelector(".tasks"),r=document.querySelector(".tasks-container"),a=document.querySelector(".add-task"),c=document.querySelector("#add-task"),i=document.querySelector(".completed-tasks");function s(n){n.target.classList.contains("fa-xmark")?function(n){const t=C.getProject(n.dataset.projectTitle);C.removeProject(t.title),n.remove(),A(document.querySelector(".project"))}(n.target.parentElement.parentElement):A(n.target)}function A(n){const t=document.querySelector(".active");var e;t&&t.classList.toggle("active"),n.classList.add("active"),r.innerHTML="",i.innerHTML="",e=C.getProject(n.dataset.projectTitle),document.querySelector("h1.project-title").textContent=I(e.title),p(),u(),function(n){const t=n.todoTasks;for(const n of t)r.append(l(n))}(e),function(n){const t=n.completedTasks;for(const n of t)i.append(l(n))}(e)}function d(n){n.target.classList.contains("checkbox")?function(n){const t=C.getProject(k()),e=n.parentElement,o=t.getTask(Number(e.dataset.taskId));e.remove(),o.toggleCompletion(),function(n,t){if(t.classList.toggle("checked"),n.completed){const n=document.createElement("i");n.classList.add("fa-solid","fa-check"),t.append(n)}}(o,n),p(),u(),o.completed?i.prepend(l(o)):r.prepend(l(o))}(n.target):n.target.classList.contains("fa-xmark")?function(n){const t=C.getProject(k()),e=n.parentElement.parentElement,o=Number(e.dataset.taskId),r=t.getTask(o);t.removeTask(o),e.remove(),r.completed?u():p()}(n.target):n.target.classList.contains("card")&&(console.log("opening details!"),function(n){const t=C.getProject(k()).getTask(n),e=document.createElement("form");e.classList.add("detailsForm"),o.append(e);const r=document.createElement("legend");r.textContent="Task Details",e.append(r);const a=document.createElement("div");a.classList.add("form-control"),e.append(a);const c=document.createElement("label");c.htmlFor="title",c.textContent="Task: ",a.append(c);const i=document.createElement("input");i.type="text",i.id="title",i.value=t.title,a.append(i);const s=document.createElement("div");s.classList.add("form-control"),e.append(s);const A=document.createElement("label");A.htmlFor="date",A.textContent="Due Date: ",s.append(A);const d=document.createElement("input");d.type="date",d.id="date",s.append(d);const l=document.createElement("div");l.classList.add("form-control"),e.append(l);const p=document.createElement("label");p.htmlFor="priority",p.textContent="Priority: ",l.append(p);const u=document.createElement("select");u.id="priority",u.append(function(n,t){const e=["None","Low","Medium","High"];for(const o of e){const e=document.createElement("option");e.value=o,e.textContent=o,o.toLowerCase()===n.priority&&(e.selected=!0),t.append(e)}}(t,u)),l.append(u);const m=document.createElement("div");m.classList.add("form-control"),e.append(m);const f=document.createElement("label");f.htmlFor="notes",f.textContent="Notes: ",m.append(f);const B=document.createElement("textarea");B.cols=50,B.rows=10,B.id="notes",B.value=t.notes,m.append(B),function(n,t,e,o,r){document.addEventListener("click",(function(n){console.log(n.target,n.target.form)})),n.addEventListener("change",(n=>{!function(n,t){console.log(n,t)}(r,n.target.value)})),t.addEventListener("change",x),e.addEventListener("change",v),o.addEventListener("change",h)}(i,d,u,B,t)}(Number(n.target.dataset.taskId)))}function l(n){const t=document.createElement("div");t.dataset.taskId=n.id,t.classList.add("card");const e=document.createElement("div");e.classList.add("checkbox"),t.append(e);const o=document.createElement("div");o.classList.add("task-info"),t.append(o);const r=document.createElement("p");if(r.classList.add("task-title"),r.textContent=n.title,o.append(r),n.completed){e.classList.add("checked"),r.classList.add("completed");const n=document.createElement("i");n.classList.add("fa-solid","fa-check"),e.append(n)}return o.append(function(n){const t=document.createElement("div");t.classList.add("task-details");const e=document.createElement("div");e.classList.add("due-date"),t.append(e);const o=document.createElement("i");o.classList.add("fa-solid","fa-calendar"),e.append(o);const r=document.createElement("span");return r.classList.add("day"),r.textContent="due soon",e.append(r),t}()),t.append(f()),t}function p(){const n=k(),t=C.getProject(n);document.querySelector(".total-tasks").textContent=t.todoLength}function u(){const n=k(),t=C.getProject(n);document.querySelector(".total-completed-tasks").textContent=t.completedLength}function m(o){const i=document.createElement("form");i.classList.add(`${o}Form`);const s=document.createElement("input");s.type="text",s.placeholder=`Enter ${o}`,s.classList.add(`${o}-input`),i.append(s);const A=document.createElement("div");A.classList.add("popout-btns"),i.append(A);const d=document.createElement("button");d.textContent="Add",A.append(d);const u=document.createElement("button");u.textContent="Cancel",A.append(u),"task"===o?(c.style.display="none",a.append(i),d.addEventListener("click",(n=>{!function(n,t){if(t.preventDefault(),!n)return alert("Please enter a name for your task"),!1;const e=new B(n);!function(n){const t=k();C.getProject(t).setTask(n)}(e),p(),r.prepend(l(e)),g("task")}(s.value,n)})),u.addEventListener("click",(()=>{g("task")}))):(e.style.display="none",t.append(i),d.addEventListener("click",(t=>{!function(t,e){e.preventDefault(),t?C.containsProject(t)?alert("Name is already in use"):(function(t){const e=document.createElement("div");e.classList.add("project"),e.dataset.projectTitle=t.title,n.append(e);const o=document.createElement("div");o.classList.add("project-info"),e.append(o);const r=document.createElement("i");r.classList.add("fa-solid","fa-book-open"),o.append(r);const a=document.createElement("span");a.classList.add("project-title"),a.textContent=I(t.title),o.append(a),e.append(f())}(new C(t)),g("project")):alert("Please enter a name for your project")}(s.value,t)})),u.addEventListener("click",(()=>{g("project")}))),s.focus()}function f(){const n=document.createElement("div");n.classList.add("modify-buttons");const t=document.createElement("i");return t.classList.add("fa-solid","fa-xmark"),n.append(t),n}function g(n){document.querySelector(`.${n}Form`).remove(),"project"===n?e.style.display="flex":c.style.display="flex"}function x(n,t){console.log(n,t)}function v(n,t){console.log(n,t)}function h(n,t){console.log(n,t)}function I(n){return n.split(" ").map((n=>n[0].toUpperCase()+n.slice(1))).join(" ")}function k(){return document.querySelector("h1.project-title").textContent.toLowerCase()}return{initListeners:function(){n.addEventListener("click",s),e.addEventListener("click",(()=>{m("project")})),r.addEventListener("click",d),i.addEventListener("click",d),c.addEventListener("click",(()=>{m("task")}))}}})();g.initListeners()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Li9zcmMvc3R5bGUuY3NzIiwid2VicGFjazovL3RvZG8tYXBwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly90b2RvLWFwcC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL3RvZG8tYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3RvZG8tYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly90b2RvLWFwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly90b2RvLWFwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90b2RvLWFwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3RvZG8tYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vdG9kby1hcHAvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG9kby1hcHAvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vdG9kby1hcHAvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3RvZG8tYXBwL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdG9kby1hcHAvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL3RvZG8tYXBwLy4vc3JjL3N0eWxlLmNzcz83MTYzIiwid2VicGFjazovL3RvZG8tYXBwLy4vc3JjL21vZHVsZXMvcHJvamVjdC5qcyIsIndlYnBhY2s6Ly90b2RvLWFwcC8uL3NyYy9tb2R1bGVzL3Rhc2suanMiLCJ3ZWJwYWNrOi8vdG9kby1hcHAvLi9zcmMvbW9kdWxlcy9kb20uanMiLCJ3ZWJwYWNrOi8vdG9kby1hcHAvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCI6cm9vdCB7XFxuICAgIC0tc2Vjb25kYXJ5LWRhcms6ICMyMTIxMmI7XFxuICAgIC0tbWFpbi1kYXJrOiAjMTgxODIwO1xcbiAgICAtLXBpbms6ICNmYzc2YTE7XFxuICAgIC0tbWFpbi10ZXh0LWNvbG9yOiAjZDVkNWQ3O1xcbiAgICAtLXNlY29uZGFyeS10ZXh0LWNvbG9yOiAjYTdhN2FiO1xcbiAgICAtLXByb2plY3QtdGV4dC1jb2xvcjogI2UyZTJlMztcXG4gICAgLS1hY3RpdmU6ICMzODM4NDY7XFxuICAgIC0tYWN0aXZlLWhvdmVyOiAjMjcyNzMyO1xcbn1cXG4qIHtcXG4gICAgcGFkZGluZzogMDtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG5cXG4ubWFpbiB7XFxuICAgIGZvbnQtc2l6ZTogMThweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgbWluLWhlaWdodDogMTAwdmg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1haW4tZGFyayk7XFxufVxcblxcbi8qIFBST0pFQ1QgU0lERUJBUiAqL1xcblxcbi5zaWRlYmFyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tc2Vjb25kYXJ5LWRhcmspO1xcbiAgICBtaW4td2lkdGg6IDI1MHB4O1xcbiAgICB3aWR0aDogMzUwcHg7XFxuICAgIGNvbG9yOiB2YXIoLS1wcm9qZWN0LXRleHQtY29sb3IpXFxufVxcblxcbi5zaWRlYmFyIGgyIHtcXG4gICAgIG1hcmdpbjogMjVweDtcXG4gICAgY29sb3I6IHZhcigtLXNlY29uZGFyeS10ZXh0LWNvbG9yKTtcXG59XFxuXFxuLnByb2plY3Qge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBwYWRkaW5nOiAyNXB4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxufVxcblxcbi5wcm9qZWN0OmhvdmVyIHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY3RpdmUtaG92ZXIpO1xcbn1cXG5cXG4ucHJvamVjdC1pbmZvIHtcXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XFxufVxcblxcbi5hY3RpdmUge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY3RpdmUpO1xcbn1cXG5cXG4uc2lkZWJhciAucHJvamVjdC10aXRsZSB7XFxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XFxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XFxufVxcblxcbi5hZGQtcHJvamVjdCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIHBhZGRpbmc6IDI1cHg7XFxufVxcblxcbi8qIFRBU0tTICovXFxuLmNvbnRhaW5lciB7XFxuICAgIHdpZHRoOiA1MCU7XFxufVxcblxcbi50YXNrcyB7XFxuICAgIGNvbG9yOiB2YXIoLS1tYWluLXRleHQtY29sb3IpO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgbWFyZ2luLXRvcDogMTAwcHg7XFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuXFxuLnRhc2tzLWNvbnRhaW5lciB7XFxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XFxufVxcblxcbi50YXNrcyAucHJvamVjdC10aXRsZSB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xcbn1cXG5cXG4uY291bnRlciB7XFxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XFxufVxcblxcbi50YXNrcy1jb250YWluZXIgLmNhcmQ6aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY3RpdmUtaG92ZXIpO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxufSAgIFxcblxcbi5jYXJkIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tc2Vjb25kYXJ5LWRhcmspO1xcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xcbiAgICBwYWRkaW5nOiAxNXB4O1xcbn1cXG5cXG4udGFzay1kZXRhaWxzIHtcXG4gICAgZm9udC1zaXplOiAuOXJlbTtcXG4gICAgY29sb3I6IHZhcigtLXNlY29uZGFyeS10ZXh0LWNvbG9yKTtcXG59XFxuXFxuLmNvbXBsZXRlZCB7XFxuICAgIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xcbiAgICB0ZXh0LWRlY29yYXRpb24tY29sb3I6ICNmZmY7XFxuICAgIHRleHQtZGVjb3JhdGlvbi10aGlja25lc3M6IDEuNXB4O1xcbn1cXG5cXG4vKiBGT1JNIEJVVFRPTlMvQ09OVFJPTCAqL1xcblxcbi5idG4ge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCB2YXIoLS1zZWNvbmRhcnktZGFyayk7XFxuICAgIHBhZGRpbmc6IDE1cHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1haW4tZGFyayk7XFxuICAgIGNvbG9yOiB2YXIoLS1tYWluLXRleHQtY29sb3IpO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxufVxcblxcbi5idG46aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY3RpdmUtaG92ZXIpO1xcbn1cXG5cXG4ucHJvamVjdDpob3ZlciAubW9kaWZ5LWJ1dHRvbnMsXFxuLmNhcmQ6aG92ZXIgLm1vZGlmeS1idXR0b25ze1xcbiAgICBkaXNwbGF5OiBibG9jaztcXG59XFxuXFxuLm1vZGlmeS1idXR0b25zIHtcXG4gICAgZGlzcGxheTogbm9uZTtcXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XFxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcXG59XFxuXFxuLm1vZGlmeS1idXR0b25zIGk6aG92ZXIge1xcbiBjb2xvcjogdmFyKC0tcGluaylcXG59XFxuXFxuLmFkZC1pY29uIHtcXG4gICAgd2lkdGg6IDMwcHg7XFxuICAgIGhlaWdodDogMzBweDtcXG4gICAgY29sb3I6IHZhcigtLW1haW4tZGFyayk7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXBpbmspO1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xcbn1cXG5cXG4uYWRkLXRhc2sgLmJ0bntcXG4gICAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi5hZGQtdGFzayB7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XFxufVxcblxcbi5jaGVja2JveCB7XFxuICAgIHdpZHRoOiAxOHB4O1xcbiAgICBoZWlnaHQ6IDE4cHg7XFxuICAgIGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLXBpbmspO1xcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcXG59XFxuXFxuLmNoZWNrYm94OmhvdmVyIHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uY2hlY2tlZCB7XFxuICAgIGNvbG9yOiB2YXIoLS1tYWluLWRhcmspO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1waW5rKTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5wb3BvdXQtYnRucyB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGdhcDogMjBweDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxufVxcblxcbi5wb3BvdXQtYnRucyBidXR0b24ge1xcbiAgICB3aWR0aDogMTAwcHg7XFxuICAgIGhlaWdodDogMzBweDtcXG4gICAgcGFkZGluZzogNXB4O1xcbn1cXG5cXG4ucHJvamVjdEZvcm0ge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuXFxuLnByb2plY3QtaW5wdXQsIC50YXNrLWlucHV0IHtcXG4gICAgaGVpZ2h0OiAzNXB4O1xcbiAgICBwYWRkaW5nOiA1cHg7XFxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG59XFxuXFxuLnRhc2tGb3JtIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIHBhZGRpbmc6IDE1cHg7XFxufVxcblxcbi50YXNrLWlucHV0IHtcXG4gICAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi5mYS1jaGVjayB7XFxuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbn1cXG5cXG4vKiBGT1JNIC8gUE9QT1VUIFRBU0sgREVUQUlMUyAqL1xcbi5kZXRhaWxzRm9ybSB7XFxuICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XFxuICAgIGNvbG9yOiBibGFjaztcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBwYWRkaW5nOiAxNXB4O1xcbiAgICBtaW4td2lkdGg6IDUwMHB4O1xcbiAgICB0b3A6IDUwJTtcXG4gICAgbGVmdDogNTAlO1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG4gICAgYm9yZGVyLXJhZGl1czogMTVweDtcXG59XFxuXFxuLmZvcm0tY29udHJvbCB7XFxuICAgIG1hcmdpbi10b3A6IDE1cHg7XFxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XFxufVxcblxcbnRleHRhcmVhIHtcXG4gICAgcGFkZGluZzogMTBweDtcXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xcbiAgICBsaW5lLWhlaWdodDogMS41O1xcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XFxuICAgIGJveC1zaGFkb3c6IDFweCAxcHggMXB4ICM5OTk7XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSx5QkFBeUI7SUFDekIsb0JBQW9CO0lBQ3BCLGVBQWU7SUFDZiwwQkFBMEI7SUFDMUIsK0JBQStCO0lBQy9CLDZCQUE2QjtJQUM3QixpQkFBaUI7SUFDakIsdUJBQXVCO0FBQzNCO0FBQ0E7SUFDSSxVQUFVO0lBQ1YsU0FBUztJQUNULHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixhQUFhO0lBQ2IsaUJBQWlCO0lBQ2pCLGtDQUFrQztBQUN0Qzs7QUFFQSxvQkFBb0I7O0FBRXBCO0lBQ0ksdUNBQXVDO0lBQ3ZDLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1o7QUFDSjs7QUFFQTtLQUNLLFlBQVk7SUFDYixrQ0FBa0M7QUFDdEM7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsYUFBYTtJQUNiLDhCQUE4QjtBQUNsQzs7QUFFQTtJQUNJLGVBQWU7SUFDZixxQ0FBcUM7QUFDekM7O0FBRUE7SUFDSSxvQkFBb0I7QUFDeEI7O0FBRUE7SUFDSSwrQkFBK0I7QUFDbkM7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsYUFBYTtBQUNqQjs7QUFFQSxVQUFVO0FBQ1Y7SUFDSSxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSw2QkFBNkI7SUFDN0IsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIsV0FBVztJQUNYLGlCQUFpQjtJQUNqQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0kscUNBQXFDO0lBQ3JDLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsdUNBQXVDO0lBQ3ZDLG1CQUFtQjtJQUNuQixtQkFBbUI7SUFDbkIsYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixrQ0FBa0M7QUFDdEM7O0FBRUE7SUFDSSw2QkFBNkI7SUFDN0IsMkJBQTJCO0lBQzNCLGdDQUFnQztBQUNwQzs7QUFFQSx5QkFBeUI7O0FBRXpCO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQix1Q0FBdUM7SUFDdkMsYUFBYTtJQUNiLGtDQUFrQztJQUNsQyw2QkFBNkI7SUFDN0IsZUFBZTtJQUNmLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLHFDQUFxQztBQUN6Qzs7QUFFQTs7SUFFSSxjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLGlCQUFpQjtJQUNqQixrQkFBa0I7QUFDdEI7O0FBRUE7Q0FDQztBQUNEOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWix1QkFBdUI7SUFDdkIsNkJBQTZCO0lBQzdCLG1CQUFtQjtJQUNuQixhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7SUFDN0Isa0JBQWtCO0lBQ2xCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSx1QkFBdUI7SUFDdkIsNkJBQTZCO0lBQzdCLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLFNBQVM7SUFDVCx1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxZQUFZO0lBQ1osWUFBWTtJQUNaLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixZQUFZO0lBQ1osbUJBQW1CO0lBQ25CLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksb0JBQW9CO0FBQ3hCOztBQUVBLCtCQUErQjtBQUMvQjtJQUNJLG1CQUFtQjtJQUNuQixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGFBQWE7SUFDYixnQkFBZ0I7SUFDaEIsUUFBUTtJQUNSLFNBQVM7SUFDVCxnQ0FBZ0M7SUFDaEMsc0JBQXNCO0lBQ3RCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsc0JBQXNCO0lBQ3RCLDRCQUE0QjtBQUNoQ1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCI6cm9vdCB7XFxuICAgIC0tc2Vjb25kYXJ5LWRhcms6ICMyMTIxMmI7XFxuICAgIC0tbWFpbi1kYXJrOiAjMTgxODIwO1xcbiAgICAtLXBpbms6ICNmYzc2YTE7XFxuICAgIC0tbWFpbi10ZXh0LWNvbG9yOiAjZDVkNWQ3O1xcbiAgICAtLXNlY29uZGFyeS10ZXh0LWNvbG9yOiAjYTdhN2FiO1xcbiAgICAtLXByb2plY3QtdGV4dC1jb2xvcjogI2UyZTJlMztcXG4gICAgLS1hY3RpdmU6ICMzODM4NDY7XFxuICAgIC0tYWN0aXZlLWhvdmVyOiAjMjcyNzMyO1xcbn1cXG4qIHtcXG4gICAgcGFkZGluZzogMDtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG5cXG4ubWFpbiB7XFxuICAgIGZvbnQtc2l6ZTogMThweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgbWluLWhlaWdodDogMTAwdmg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1haW4tZGFyayk7XFxufVxcblxcbi8qIFBST0pFQ1QgU0lERUJBUiAqL1xcblxcbi5zaWRlYmFyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tc2Vjb25kYXJ5LWRhcmspO1xcbiAgICBtaW4td2lkdGg6IDI1MHB4O1xcbiAgICB3aWR0aDogMzUwcHg7XFxuICAgIGNvbG9yOiB2YXIoLS1wcm9qZWN0LXRleHQtY29sb3IpXFxufVxcblxcbi5zaWRlYmFyIGgyIHtcXG4gICAgIG1hcmdpbjogMjVweDtcXG4gICAgY29sb3I6IHZhcigtLXNlY29uZGFyeS10ZXh0LWNvbG9yKTtcXG59XFxuXFxuLnByb2plY3Qge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBwYWRkaW5nOiAyNXB4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxufVxcblxcbi5wcm9qZWN0OmhvdmVyIHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY3RpdmUtaG92ZXIpO1xcbn1cXG5cXG4ucHJvamVjdC1pbmZvIHtcXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XFxufVxcblxcbi5hY3RpdmUge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY3RpdmUpO1xcbn1cXG5cXG4uc2lkZWJhciAucHJvamVjdC10aXRsZSB7XFxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XFxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XFxufVxcblxcbi5hZGQtcHJvamVjdCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIHBhZGRpbmc6IDI1cHg7XFxufVxcblxcbi8qIFRBU0tTICovXFxuLmNvbnRhaW5lciB7XFxuICAgIHdpZHRoOiA1MCU7XFxufVxcblxcbi50YXNrcyB7XFxuICAgIGNvbG9yOiB2YXIoLS1tYWluLXRleHQtY29sb3IpO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgbWFyZ2luLXRvcDogMTAwcHg7XFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuXFxuLnRhc2tzLWNvbnRhaW5lciB7XFxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XFxufVxcblxcbi50YXNrcyAucHJvamVjdC10aXRsZSB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xcbn1cXG5cXG4uY291bnRlciB7XFxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XFxufVxcblxcbi50YXNrcy1jb250YWluZXIgLmNhcmQ6aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY3RpdmUtaG92ZXIpO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxufSAgIFxcblxcbi5jYXJkIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tc2Vjb25kYXJ5LWRhcmspO1xcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xcbiAgICBwYWRkaW5nOiAxNXB4O1xcbn1cXG5cXG4udGFzay1kZXRhaWxzIHtcXG4gICAgZm9udC1zaXplOiAuOXJlbTtcXG4gICAgY29sb3I6IHZhcigtLXNlY29uZGFyeS10ZXh0LWNvbG9yKTtcXG59XFxuXFxuLmNvbXBsZXRlZCB7XFxuICAgIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xcbiAgICB0ZXh0LWRlY29yYXRpb24tY29sb3I6ICNmZmY7XFxuICAgIHRleHQtZGVjb3JhdGlvbi10aGlja25lc3M6IDEuNXB4O1xcbn1cXG5cXG4vKiBGT1JNIEJVVFRPTlMvQ09OVFJPTCAqL1xcblxcbi5idG4ge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCB2YXIoLS1zZWNvbmRhcnktZGFyayk7XFxuICAgIHBhZGRpbmc6IDE1cHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1haW4tZGFyayk7XFxuICAgIGNvbG9yOiB2YXIoLS1tYWluLXRleHQtY29sb3IpO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxufVxcblxcbi5idG46aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY3RpdmUtaG92ZXIpO1xcbn1cXG5cXG4ucHJvamVjdDpob3ZlciAubW9kaWZ5LWJ1dHRvbnMsXFxuLmNhcmQ6aG92ZXIgLm1vZGlmeS1idXR0b25ze1xcbiAgICBkaXNwbGF5OiBibG9jaztcXG59XFxuXFxuLm1vZGlmeS1idXR0b25zIHtcXG4gICAgZGlzcGxheTogbm9uZTtcXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XFxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcXG59XFxuXFxuLm1vZGlmeS1idXR0b25zIGk6aG92ZXIge1xcbiBjb2xvcjogdmFyKC0tcGluaylcXG59XFxuXFxuLmFkZC1pY29uIHtcXG4gICAgd2lkdGg6IDMwcHg7XFxuICAgIGhlaWdodDogMzBweDtcXG4gICAgY29sb3I6IHZhcigtLW1haW4tZGFyayk7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXBpbmspO1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xcbn1cXG5cXG4uYWRkLXRhc2sgLmJ0bntcXG4gICAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi5hZGQtdGFzayB7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XFxufVxcblxcbi5jaGVja2JveCB7XFxuICAgIHdpZHRoOiAxOHB4O1xcbiAgICBoZWlnaHQ6IDE4cHg7XFxuICAgIGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLXBpbmspO1xcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcXG59XFxuXFxuLmNoZWNrYm94OmhvdmVyIHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uY2hlY2tlZCB7XFxuICAgIGNvbG9yOiB2YXIoLS1tYWluLWRhcmspO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1waW5rKTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5wb3BvdXQtYnRucyB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGdhcDogMjBweDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxufVxcblxcbi5wb3BvdXQtYnRucyBidXR0b24ge1xcbiAgICB3aWR0aDogMTAwcHg7XFxuICAgIGhlaWdodDogMzBweDtcXG4gICAgcGFkZGluZzogNXB4O1xcbn1cXG5cXG4ucHJvamVjdEZvcm0ge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuXFxuLnByb2plY3QtaW5wdXQsIC50YXNrLWlucHV0IHtcXG4gICAgaGVpZ2h0OiAzNXB4O1xcbiAgICBwYWRkaW5nOiA1cHg7XFxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG59XFxuXFxuLnRhc2tGb3JtIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIHBhZGRpbmc6IDE1cHg7XFxufVxcblxcbi50YXNrLWlucHV0IHtcXG4gICAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi5mYS1jaGVjayB7XFxuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbn1cXG5cXG4vKiBGT1JNIC8gUE9QT1VUIFRBU0sgREVUQUlMUyAqL1xcbi5kZXRhaWxzRm9ybSB7XFxuICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XFxuICAgIGNvbG9yOiBibGFjaztcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBwYWRkaW5nOiAxNXB4O1xcbiAgICBtaW4td2lkdGg6IDUwMHB4O1xcbiAgICB0b3A6IDUwJTtcXG4gICAgbGVmdDogNTAlO1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG4gICAgYm9yZGVyLXJhZGl1czogMTVweDtcXG59XFxuXFxuLmZvcm0tY29udHJvbCB7XFxuICAgIG1hcmdpbi10b3A6IDE1cHg7XFxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XFxufVxcblxcbnRleHRhcmVhIHtcXG4gICAgcGFkZGluZzogMTBweDtcXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xcbiAgICBsaW5lLWhlaWdodDogMS41O1xcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XFxuICAgIGJveC1zaGFkb3c6IDFweCAxcHggMXB4ICM5OTk7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcblxuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdXBkYXRlcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuXG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cblxuICBjc3MgKz0gb2JqLmNzcztcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiY2xhc3MgUHJvamVjdCB7XG4gICAgY29uc3RydWN0b3IodGl0bGUpe1xuICAgICAgICB0aGlzLnRpdGxlID0gdGl0bGVcbiAgICAgICAgdGhpcy50YXNrcyA9IFtdXG4gICAgICAgIFByb2plY3QuYWxsUHJvamVjdHMucHVzaCh0aGlzKVxuICAgIH1cblxuICAgIHN0YXRpYyBhbGxQcm9qZWN0cyA9IFtdXG5cbiAgICBzdGF0aWMgY29udGFpbnNQcm9qZWN0KHByb2plY3RUaXRsZSl7XG4gICAgICAgIHJldHVybiBQcm9qZWN0LmFsbFByb2plY3RzLnNvbWUocHJvamVjdCA9PiBwcm9qZWN0LnRpdGxlID09PSBwcm9qZWN0VGl0bGUpXG4gICAgfVxuICAgIHN0YXRpYyBnZXRQcm9qZWN0KHByb2plY3RUaXRsZSl7XG4gICAgICAgIHJldHVybiBQcm9qZWN0LmFsbFByb2plY3RzLmZpbmQocHJvamVjdCA9PiBwcm9qZWN0LnRpdGxlID09PSBwcm9qZWN0VGl0bGUpXG4gICAgfVxuXG4gICAgc3RhdGljIHJlbW92ZVByb2plY3QocHJvamVjdFRpdGxlKXtcbiAgICAgICAgUHJvamVjdC5hbGxQcm9qZWN0cyA9IFByb2plY3QuYWxsUHJvamVjdHMuZmlsdGVyKHByb2plY3QgPT4gcHJvamVjdC50aXRsZSAhPT0gcHJvamVjdFRpdGxlKVxuICAgIH1cblxuICAgIHN0YXRpYyBzZXRBbGxQcm9qZWN0cyhwcm9qZWN0cyl7XG4gICAgICAgIFByb2plY3QuYWxsUHJvamVjdHMgPSBwcm9qZWN0c1xuICAgIH1cbiAgICBcbiAgICBzZXRUYXNrcyh0YXNrcyl7XG4gICAgICAgIHRoaXMudGFza3MgPSB0YXNrc1xuICAgIH1cblxuICAgIGdldCB0b2RvTGVuZ3RoKCl7XG4gICAgICAgIHJldHVybiB0aGlzLnRhc2tzLmZpbHRlcih0YXNrID0+ICF0YXNrLmNvbXBsZXRlZCkubGVuZ3RoXG4gICAgfVxuXG4gICAgZ2V0IGNvbXBsZXRlZExlbmd0aCgpe1xuICAgICAgICByZXR1cm4gdGhpcy50YXNrcy5maWx0ZXIodGFzayA9PiB0YXNrLmNvbXBsZXRlZCkubGVuZ3RoXG4gICAgfVxuXG4gICAgZ2V0IHRvZG9UYXNrcygpe1xuICAgICAgICByZXR1cm4gdGhpcy50YXNrcy5maWx0ZXIodGFzayA9PiAhdGFzay5jb21wbGV0ZWQpXG4gICAgfVxuXG4gICAgZ2V0IGNvbXBsZXRlZFRhc2tzKCl7XG4gICAgICAgIHJldHVybiB0aGlzLnRhc2tzLmZpbHRlcih0YXNrID0+IHRhc2suY29tcGxldGVkKVxuICAgIH1cblxuICAgZ2V0VGFzayh0YXNrSUQpe1xuICAgICAgICBjb25zdCB0YXNrID0gdGhpcy50YXNrcy5maW5kKCh7aWR9KSA9PiBpZCA9PT0gdGFza0lEKVxuICAgICAgICByZXR1cm4gdGFza1xuICAgIH1cblxuICAgIHNldFRhc2sodGFzayl7XG4gICAgICAgIHRoaXMudGFza3MucHVzaCh0YXNrKVxuICAgIH1cblxuICAgIHJlbW92ZVRhc2sodGFza0lEKXtcbiAgICAgICAgdGhpcy50YXNrcyA9IHRoaXMudGFza3MuZmlsdGVyKHRhc2sgPT4gdGFzay5pZCAhPSB0YXNrSUQpXG4gICAgfVxufVxuXG5leHBvcnQgeyBQcm9qZWN0IH0iLCJsZXQgdGFza0lEID0gMFxuXG5jbGFzcyBUYXNrIHtcbiAgICBjb25zdHJ1Y3Rvcih0aXRsZSl7XG4gICAgICAgIHRoaXMudGl0bGUgPSB0aXRsZVxuICAgICAgICB0aGlzLmNvbXBsZXRlZCA9IGZhbHNlXG4gICAgICAgIHRoaXMuaWQgPSB0YXNrSUQrK1xuICAgICAgICB0aGlzLnByaW9yaXR5ID0gJ25vbmUnXG4gICAgICAgIHRoaXMubm90ZXMgPSAnJ1xuICAgIH1cblxuICAgIHNldFRpdGxlKHZhbHVlKXtcbiAgICAgICAgIHRoaXMudGl0bGUgPSB2YWx1ZVxuICAgIH1cblxuICAgIGdldER1ZURhdGUoKXtcbiAgICAgICAgaWYgKHRoaXMuZHVlRGF0ZSkgcmV0dXJuIHRoaXMuZHVlRGF0ZVxuICAgIH1cblxuICAgIHNldER1ZURhdGUoZGF0ZSl7XG4gICAgICAgIHRoaXMuZHVlRGF0ZSA9IGRhdGVcbiAgICB9XG5cbiAgICBzZXRQcmlvcml0eSh2YWx1ZSl7XG4gICAgICAgIHRoaXMucHJpb3JpdHkgPSB2YWx1ZVxuICAgIH1cblxuICAgIHNldE5vdGVzKHZhbHVlKXtcbiAgICAgICAgdGhpcy5ub3RlcyA9IHZhbHVlXG4gICAgfVxuXG4gICAgdG9nZ2xlQ29tcGxldGlvbigpe1xuICAgICAgICB0aGlzLmNvbXBsZXRlZCA/IHRoaXMuY29tcGxldGVkID0gZmFsc2UgOiB0aGlzLmNvbXBsZXRlZCA9IHRydWVcbiAgICB9XG59XG5cbmV4cG9ydCB7IFRhc2sgfSIsImltcG9ydCB7IFByb2plY3QgfSBmcm9tICcuL3Byb2plY3QnXG5pbXBvcnQgeyBmb3JtYXQgfSBmcm9tICdkYXRlLWZucydcbmltcG9ydCB7IFRhc2sgfSBmcm9tICcuL3Rhc2snXG5cbmNvbnN0IERPTSA9ICgoKSA9PiB7XG4gICAgY29uc3QgcHJvamVjdENvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9qZWN0LWNvbnRhaW5lcicpXG4gICAgY29uc3QgYWRkUHJvamVjdENvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGQtcHJvamVjdCcpXG4gICAgY29uc3QgYWRkUHJvamVjdEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhZGQtcHJvamVjdCcpXG4gICAgY29uc3QgdGFza1NlY3Rpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGFza3MnKVxuICAgIGNvbnN0IHRhc2tzQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRhc2tzLWNvbnRhaW5lcicpXG4gICAgY29uc3QgYWRkVGFza0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGQtdGFzaycpXG4gICAgY29uc3QgYWRkVGFza0J0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhZGQtdGFzaycpXG4gICAgY29uc3QgY29tcGxldGVkQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbXBsZXRlZC10YXNrcycpXG5cblxuICAgIGZ1bmN0aW9uIGluaXRMaXN0ZW5lcnMoKXtcbiAgICAgICAgcHJvamVjdENvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGxvYWRQcm9qZWN0RXZlbnQpXG4gICAgICAgIGFkZFByb2plY3RCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7cmVuZGVyTmV3Rm9ybSgncHJvamVjdCcpfSlcbiAgICAgICAgdGFza3NDb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBsb2FkVGFza0V2ZW50KVxuICAgICAgICBjb21wbGV0ZWRDb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBsb2FkVGFza0V2ZW50KVxuICAgICAgICBhZGRUYXNrQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge3JlbmRlck5ld0Zvcm0oJ3Rhc2snKX0pXG4gICAgfVxuXG4gICAgLy8gUFJPSkVDVCBGVU5DVElPTlNcblxuICAgIGZ1bmN0aW9uIGxvYWRQcm9qZWN0RXZlbnQoZSl7XG4gICAgICAgIGlmIChlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ2ZhLXhtYXJrJykpe1xuICAgICAgICAgICAgZGVsZXRlUHJvamVjdChlLnRhcmdldC5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzZXRBY3RpdmVQcm9qZWN0KGUudGFyZ2V0KVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVuZGVyUHJvamVjdChwcm9qZWN0KXtcbiAgICAgICAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICAgICAgZGl2LmNsYXNzTGlzdC5hZGQoJ3Byb2plY3QnKVxuICAgICAgICBkaXYuZGF0YXNldC5wcm9qZWN0VGl0bGUgPSBwcm9qZWN0LnRpdGxlXG4gICAgICAgIHByb2plY3RDb250YWluZXIuYXBwZW5kKGRpdilcblxuICAgICAgICBjb25zdCBwcm9qZWN0SW5mbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgICAgIHByb2plY3RJbmZvLmNsYXNzTGlzdC5hZGQoJ3Byb2plY3QtaW5mbycpXG4gICAgICAgIGRpdi5hcHBlbmQocHJvamVjdEluZm8pXG5cbiAgICAgICAgY29uc3QgaWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2knKVxuICAgICAgICBpY29uLmNsYXNzTGlzdC5hZGQoJ2ZhLXNvbGlkJywgJ2ZhLWJvb2stb3BlbicpXG4gICAgICAgIHByb2plY3RJbmZvLmFwcGVuZChpY29uKVxuXG4gICAgICAgIGNvbnN0IHNwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJylcbiAgICAgICAgc3Bhbi5jbGFzc0xpc3QuYWRkKCdwcm9qZWN0LXRpdGxlJylcbiAgICAgICAgc3Bhbi50ZXh0Q29udGVudCA9IGNhcGl0YWxpemVTdHJpbmcocHJvamVjdC50aXRsZSlcbiAgICAgICAgcHJvamVjdEluZm8uYXBwZW5kKHNwYW4pXG5cbiAgICAgICAgZGl2LmFwcGVuZChyZW5kZXJNb2RpZnlCdXR0b25zKCkpXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc2V0QWN0aXZlUHJvamVjdChub2RlKXtcbiAgICAgICAgY29uc3Qgb2xkQWN0aXZlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFjdGl2ZScpXG4gICAgICAgIGlmIChvbGRBY3RpdmUpe1xuICAgICAgICAgICAgb2xkQWN0aXZlLmNsYXNzTGlzdC50b2dnbGUoJ2FjdGl2ZScpXG4gICAgICAgIH1cblxuICAgICAgICBub2RlLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpXG4gICAgICAgIGNsZWFyVGFza3MoKVxuICAgICAgICBsZXQgcHJvamVjdCA9IFByb2plY3QuZ2V0UHJvamVjdChub2RlLmRhdGFzZXQucHJvamVjdFRpdGxlKVxuICAgICAgICByZW5kZXJQcm9qZWN0c1Rhc2socHJvamVjdClcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjcmVhdGVOZXdQcm9qZWN0KHByb2plY3QsIGUpe1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KClcblxuICAgICAgICBpZiAoIXByb2plY3Qpe1xuICAgICAgICAgICAgYWxlcnQoJ1BsZWFzZSBlbnRlciBhIG5hbWUgZm9yIHlvdXIgcHJvamVjdCcpXG4gICAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgfSBlbHNlIGlmIChQcm9qZWN0LmNvbnRhaW5zUHJvamVjdChwcm9qZWN0KSl7XG4gICAgICAgICAgICBhbGVydCgnTmFtZSBpcyBhbHJlYWR5IGluIHVzZScpXG4gICAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IG5ld1Byb2plY3QgPSBuZXcgUHJvamVjdChwcm9qZWN0KVxuICAgICAgICByZW5kZXJQcm9qZWN0KG5ld1Byb2plY3QpXG4gICAgICAgIHJlbW92ZUZvcm0oJ3Byb2plY3QnKVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGRlbGV0ZVByb2plY3Qobm9kZSl7XG4gICAgICAgIGNvbnN0IHByb2plY3QgPSBQcm9qZWN0LmdldFByb2plY3Qobm9kZS5kYXRhc2V0LnByb2plY3RUaXRsZSlcbiAgICAgICAgUHJvamVjdC5yZW1vdmVQcm9qZWN0KHByb2plY3QudGl0bGUpXG4gICAgICAgIG5vZGUucmVtb3ZlKClcbiAgICAgICAgc2V0QWN0aXZlUHJvamVjdChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvamVjdCcpKVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJlbmRlclByb2plY3RMaXN0KCl7XG4gICAgICAgIGNvbnN0IHByb2plY3RzID0gUHJvamVjdC5hbGxQcm9qZWN0c1xuXG4gICAgICAgIGZvciAoY29uc3QgcHJvamVjdCBvZiBwcm9qZWN0cyl7XG4gICAgICAgICAgICByZW5kZXJQcm9qZWN0KHByb2plY3QpXG4gICAgICAgIH0gXG4gICAgICAgIFxuICAgICAgICBzZXRBY3RpdmVQcm9qZWN0KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9qZWN0JykpXG4gICAgfVxuXG4gICAgLy8gVEFTSyBGVU5DVElPTlNcbiAgICBmdW5jdGlvbiBsb2FkVGFza0V2ZW50KGUpe1xuICAgICAgICBpZiAoZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdjaGVja2JveCcpKXtcbiAgICAgICAgICAgIHRvZ2dsZVRhc2tDb21wbGV0aW9uKGUudGFyZ2V0KVxuICAgICAgICB9IGVsc2UgaWYgKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnZmEteG1hcmsnKSl7XG4gICAgICAgICAgICBkZWxldGVUYXNrKGUudGFyZ2V0KVxuICAgICAgICB9IGVsc2UgaWYgKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnY2FyZCcpKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnb3BlbmluZyBkZXRhaWxzIScpXG4gICAgICAgICAgICByZW5kZXJUYXNrRGV0YWlsc0Zvcm0oTnVtYmVyKGUudGFyZ2V0LmRhdGFzZXQudGFza0lkKSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJlbmRlclRhc2sodGFzayl7XG4gICAgICAgIGNvbnN0IGNhcmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgICAgICBjYXJkLmRhdGFzZXQudGFza0lkID0gdGFzay5pZFxuICAgICAgICBjYXJkLmNsYXNzTGlzdC5hZGQoJ2NhcmQnKVxuXG4gICAgICAgIGNvbnN0IGNoZWNrYm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICAgICAgY2hlY2tib3guY2xhc3NMaXN0LmFkZCgnY2hlY2tib3gnKVxuICAgICAgICBjYXJkLmFwcGVuZChjaGVja2JveClcblxuICAgICAgICBjb25zdCB0YXNrSW5mbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgICAgIHRhc2tJbmZvLmNsYXNzTGlzdC5hZGQoJ3Rhc2staW5mbycpXG4gICAgICAgIGNhcmQuYXBwZW5kKHRhc2tJbmZvKVxuXG4gICAgICAgIGNvbnN0IHRhc2tUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKVxuICAgICAgICB0YXNrVGl0bGUuY2xhc3NMaXN0LmFkZCgndGFzay10aXRsZScpXG4gICAgICAgIHRhc2tUaXRsZS50ZXh0Q29udGVudCA9IHRhc2sudGl0bGVcbiAgICAgICAgdGFza0luZm8uYXBwZW5kKHRhc2tUaXRsZSlcblxuICAgICAgICBpZiAodGFzay5jb21wbGV0ZWQpe1xuICAgICAgICAgICAgY2hlY2tib3guY2xhc3NMaXN0LmFkZCgnY2hlY2tlZCcpXG4gICAgICAgICAgICB0YXNrVGl0bGUuY2xhc3NMaXN0LmFkZCgnY29tcGxldGVkJylcblxuICAgICAgICAgICAgY29uc3QgaWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2knKVxuICAgICAgICAgICAgaWNvbi5jbGFzc0xpc3QuYWRkKCdmYS1zb2xpZCcsICdmYS1jaGVjaycpXG4gICAgICAgICAgICBjaGVja2JveC5hcHBlbmQoaWNvbilcbiAgICAgICAgfVxuXG4gICAgICAgIHRhc2tJbmZvLmFwcGVuZChyZW5kZXJUYXNrRGV0YWlscyh0YXNrKSlcbiAgICAgICAgY2FyZC5hcHBlbmQocmVuZGVyTW9kaWZ5QnV0dG9ucygpKVxuXG4gICAgICAgIHJldHVybiBjYXJkXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY3JlYXRlTmV3VGFzayh0YXNrLCBlKXtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICAgXG4gICAgICAgIGlmICghdGFzayl7XG4gICAgICAgICAgICBhbGVydCgnUGxlYXNlIGVudGVyIGEgbmFtZSBmb3IgeW91ciB0YXNrJylcbiAgICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgbmV3VGFzayA9IG5ldyBUYXNrKHRhc2spXG4gICAgICAgIHVwZGF0ZVByb2plY3RzVGFzayhuZXdUYXNrKVxuICAgICAgICB1cGRhdGVUb3RhbFRvZG9UYXNrc0xlbmd0aCgpXG4gICAgICAgIHRhc2tzQ29udGFpbmVyLnByZXBlbmQocmVuZGVyVGFzayhuZXdUYXNrKSlcbiAgICAgICAgcmVtb3ZlRm9ybSgndGFzaycpXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdXBkYXRlUHJvamVjdHNUYXNrKHRhc2spe1xuICAgICAgICBjb25zdCBwcm9qZWN0VGl0bGUgPSBnZXRQcm9qZWN0VGl0bGUoKVxuICAgICAgICBjb25zdCBwcm9qZWN0ID0gUHJvamVjdC5nZXRQcm9qZWN0KHByb2plY3RUaXRsZSlcbiAgICAgICAgcHJvamVjdC5zZXRUYXNrKHRhc2spXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVuZGVyUHJvamVjdHNUYXNrKHByb2plY3Qpe1xuICAgICAgICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2gxLnByb2plY3QtdGl0bGUnKVxuICAgICAgICB0aXRsZS50ZXh0Q29udGVudCA9IGNhcGl0YWxpemVTdHJpbmcocHJvamVjdC50aXRsZSlcblxuICAgICAgICB1cGRhdGVUb3RhbFRvZG9UYXNrc0xlbmd0aCgpXG4gICAgICAgIHVwZGF0ZUNvbXBsZXRlZFRhc2tzTGVuZ3RoKClcbiAgICAgICAgcmVuZGVyVW5jb21wbGV0ZWRUYXNrcyhwcm9qZWN0KVxuICAgICAgICByZW5kZXJDb21wbGV0ZWRUYXNrcyhwcm9qZWN0KVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJlbmRlclVuY29tcGxldGVkVGFza3MocHJvamVjdCl7XG4gICAgICAgIGNvbnN0IHRhc2tzID0gcHJvamVjdC50b2RvVGFza3NcblxuICAgICAgICBmb3IgKGNvbnN0IHRhc2sgb2YgdGFza3Mpe1xuICAgICAgICAgICAgdGFza3NDb250YWluZXIuYXBwZW5kKHJlbmRlclRhc2sodGFzaykpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiByZW5kZXJDb21wbGV0ZWRUYXNrcyhwcm9qZWN0KXtcbiAgICAgICAgY29uc3QgdGFza3MgPSBwcm9qZWN0LmNvbXBsZXRlZFRhc2tzXG5cbiAgICAgICAgZm9yIChjb25zdCB0YXNrIG9mIHRhc2tzKXtcbiAgICAgICAgICAgIGNvbXBsZXRlZENvbnRhaW5lci5hcHBlbmQocmVuZGVyVGFzayh0YXNrKSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJlbmRlclRhc2tEZXRhaWxzKHRhc2spe1xuICAgICAgICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgICAgICBkaXYuY2xhc3NMaXN0LmFkZCgndGFzay1kZXRhaWxzJylcblxuICAgICAgICBjb25zdCBkdWVEYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICAgICAgZHVlRGF0ZS5jbGFzc0xpc3QuYWRkKCdkdWUtZGF0ZScpXG4gICAgICAgIGRpdi5hcHBlbmQoZHVlRGF0ZSlcblxuICAgICAgICBjb25zdCBpY29uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaScpXG4gICAgICAgIGljb24uY2xhc3NMaXN0LmFkZCgnZmEtc29saWQnLCAnZmEtY2FsZW5kYXInKVxuICAgICAgICBkdWVEYXRlLmFwcGVuZChpY29uKVxuXG4gICAgICAgIGNvbnN0IGRheSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKVxuICAgICAgICBkYXkuY2xhc3NMaXN0LmFkZCgnZGF5JylcbiAgICAgICAgZGF5LnRleHRDb250ZW50ID0gJ2R1ZSBzb29uJ1xuICAgICAgICBkdWVEYXRlLmFwcGVuZChkYXkpXG5cbiAgICAgICAgcmV0dXJuIGRpdlxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHVwZGF0ZVRvdGFsVG9kb1Rhc2tzTGVuZ3RoKCl7XG4gICAgICAgIGNvbnN0IHByb2plY3RUaXRsZSA9IGdldFByb2plY3RUaXRsZSgpXG4gICAgICAgIGNvbnN0IHByb2plY3QgPSBQcm9qZWN0LmdldFByb2plY3QocHJvamVjdFRpdGxlKVxuICAgICAgICBjb25zdCB0b3RhbFRhc2tzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRvdGFsLXRhc2tzJylcbiAgICAgICAgdG90YWxUYXNrcy50ZXh0Q29udGVudCA9IHByb2plY3QudG9kb0xlbmd0aFxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHVwZGF0ZUNvbXBsZXRlZFRhc2tzTGVuZ3RoKCl7XG4gICAgICAgIGNvbnN0IHByb2plY3RUaXRsZSA9IGdldFByb2plY3RUaXRsZSgpXG4gICAgICAgIGNvbnN0IHByb2plY3QgPSBQcm9qZWN0LmdldFByb2plY3QocHJvamVjdFRpdGxlKVxuICAgICAgICBjb25zdCBjb21wbGV0ZWRUYXNrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50b3RhbC1jb21wbGV0ZWQtdGFza3MnKVxuICAgICAgICBjb21wbGV0ZWRUYXNrcy50ZXh0Q29udGVudCA9IHByb2plY3QuY29tcGxldGVkTGVuZ3RoXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdG9nZ2xlVGFza0NvbXBsZXRpb24obm9kZSl7XG4gICAgICAgIGNvbnN0IHByb2plY3QgPSBQcm9qZWN0LmdldFByb2plY3QoZ2V0UHJvamVjdFRpdGxlKCkpXG4gICAgICAgIGNvbnN0IHRhc2tDYXJkID0gbm9kZS5wYXJlbnRFbGVtZW50XG4gICAgICAgIGNvbnN0IHRhc2sgPSBwcm9qZWN0LmdldFRhc2soTnVtYmVyKHRhc2tDYXJkLmRhdGFzZXQudGFza0lkKSlcblxuICAgICAgICB0YXNrQ2FyZC5yZW1vdmUoKVxuICAgICAgICB0YXNrLnRvZ2dsZUNvbXBsZXRpb24oKVxuICAgICAgICB1cGRhdGVDaGVja2JveCh0YXNrLCBub2RlKVxuICAgICAgICB1cGRhdGVUb3RhbFRvZG9UYXNrc0xlbmd0aCgpXG4gICAgICAgIHVwZGF0ZUNvbXBsZXRlZFRhc2tzTGVuZ3RoKClcblxuICAgICAgICBpZiAodGFzay5jb21wbGV0ZWQpe1xuICAgICAgICAgICAgY29tcGxldGVkQ29udGFpbmVyLnByZXBlbmQocmVuZGVyVGFzayh0YXNrKSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRhc2tzQ29udGFpbmVyLnByZXBlbmQocmVuZGVyVGFzayh0YXNrKSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHVwZGF0ZUNoZWNrYm94KHRhc2ssIG5vZGUpe1xuICAgICAgICBub2RlLmNsYXNzTGlzdC50b2dnbGUoJ2NoZWNrZWQnKVxuICAgICAgICBpZiAodGFzay5jb21wbGV0ZWQpe1xuICAgICAgICAgICAgY29uc3QgaWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2knKVxuICAgICAgICAgICAgaWNvbi5jbGFzc0xpc3QuYWRkKCdmYS1zb2xpZCcsICdmYS1jaGVjaycpXG4gICAgICAgICAgICBub2RlLmFwcGVuZChpY29uKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZGVsZXRlVGFzayhub2RlKXtcbiAgICAgICAgY29uc3QgcHJvamVjdCA9IFByb2plY3QuZ2V0UHJvamVjdChnZXRQcm9qZWN0VGl0bGUoKSlcbiAgICAgICAgY29uc3QgdGFza0NhcmQgPSBub2RlLnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudFxuICAgICAgICBjb25zdCB0YXNrSUQgPSBOdW1iZXIodGFza0NhcmQuZGF0YXNldC50YXNrSWQpXG4gICAgICAgIGNvbnN0IHRhc2sgPSBwcm9qZWN0LmdldFRhc2sodGFza0lEKVxuXG4gICAgICAgIHByb2plY3QucmVtb3ZlVGFzayh0YXNrSUQpXG4gICAgICAgIHRhc2tDYXJkLnJlbW92ZSgpXG5cbiAgICAgICAgdGFzay5jb21wbGV0ZWQgPyB1cGRhdGVDb21wbGV0ZWRUYXNrc0xlbmd0aCgpIDogdXBkYXRlVG90YWxUb2RvVGFza3NMZW5ndGgoKVxuICAgIH1cbiAgICAvLyBGT1JNXG5cbiAgICBmdW5jdGlvbiByZW5kZXJOZXdGb3JtKHR5cGUpe1xuICAgICAgICBjb25zdCBmb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZm9ybScpXG4gICAgICAgIGZvcm0uY2xhc3NMaXN0LmFkZChgJHt0eXBlfUZvcm1gKVxuXG4gICAgICAgIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKVxuICAgICAgICBpbnB1dC50eXBlID0gJ3RleHQnXG4gICAgICAgIGlucHV0LnBsYWNlaG9sZGVyID0gYEVudGVyICR7dHlwZX1gXG4gICAgICAgIGlucHV0LmNsYXNzTGlzdC5hZGQoYCR7dHlwZX0taW5wdXRgKVxuICAgICAgICBmb3JtLmFwcGVuZChpbnB1dClcblxuICAgICAgICBjb25zdCBidG5Db250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgICAgICBidG5Db250YWluZXIuY2xhc3NMaXN0LmFkZChgcG9wb3V0LWJ0bnNgKVxuICAgICAgICBmb3JtLmFwcGVuZChidG5Db250YWluZXIpXG5cbiAgICAgICAgY29uc3QgYWRkQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJylcbiAgICAgICAgYWRkQnRuLnRleHRDb250ZW50ID0gJ0FkZCdcbiAgICAgICAgYnRuQ29udGFpbmVyLmFwcGVuZChhZGRCdG4pXG5cbiAgICAgICAgY29uc3QgY2FuY2VsQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJylcbiAgICAgICAgY2FuY2VsQnRuLnRleHRDb250ZW50ID0gJ0NhbmNlbCdcbiAgICAgICAgYnRuQ29udGFpbmVyLmFwcGVuZChjYW5jZWxCdG4pXG5cbiAgICAgICAgaWYgKHR5cGUgPT09ICd0YXNrJyl7XG4gICAgICAgICAgICBhZGRUYXNrQnRuLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSdcbiAgICAgICAgICAgIGFkZFRhc2tDb250YWluZXIuYXBwZW5kKGZvcm0pXG4gICAgICAgICAgICBhZGRCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4geyBjcmVhdGVOZXdUYXNrKGlucHV0LnZhbHVlLCBlKX0pXG4gICAgICAgICAgICBjYW5jZWxCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7cmVtb3ZlRm9ybSgndGFzaycpfSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGFkZFByb2plY3RCdG4uc3R5bGUuZGlzcGxheSA9ICdub25lJ1xuICAgICAgICAgICAgYWRkUHJvamVjdENvbnRhaW5lci5hcHBlbmQoZm9ybSlcbiAgICAgICAgICAgIGFkZEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7IGNyZWF0ZU5ld1Byb2plY3QoaW5wdXQudmFsdWUsIGUpfSlcbiAgICAgICAgICAgIGNhbmNlbEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtyZW1vdmVGb3JtKCdwcm9qZWN0Jyl9KVxuICAgICAgICB9XG5cbiAgICAgICAgaW5wdXQuZm9jdXMoKVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJlbmRlck1vZGlmeUJ1dHRvbnMoKSB7XG4gICAgICAgIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgICAgIGRpdi5jbGFzc0xpc3QuYWRkKCdtb2RpZnktYnV0dG9ucycpXG5cbiAgICAgICAgY29uc3QgZGVsZXRlSWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2knKVxuICAgICAgICBkZWxldGVJY29uLmNsYXNzTGlzdC5hZGQoJ2ZhLXNvbGlkJywgJ2ZhLXhtYXJrJylcbiAgICAgICAgZGl2LmFwcGVuZChkZWxldGVJY29uKVxuICAgICAgICByZXR1cm4gZGl2XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVtb3ZlRm9ybSh0eXBlKXtcbiAgICAgICAgY29uc3QgZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke3R5cGV9Rm9ybWApXG4gICAgICAgIGZvcm0ucmVtb3ZlKClcblxuICAgICAgICB0eXBlID09PSAncHJvamVjdCcgPyBhZGRQcm9qZWN0QnRuLnN0eWxlLmRpc3BsYXkgPSAnZmxleCcgOiBhZGRUYXNrQnRuLnN0eWxlLmRpc3BsYXkgPSAnZmxleCdcbiAgICB9XG5cbiAgICBmdW5jdGlvbiByZW5kZXJUYXNrRGV0YWlsc0Zvcm0odGFza0lEKXtcbiAgICAgICAgY29uc3QgcHJvamVjdCA9IFByb2plY3QuZ2V0UHJvamVjdChnZXRQcm9qZWN0VGl0bGUoKSlcbiAgICAgICAgY29uc3QgdGFzayA9IHByb2plY3QuZ2V0VGFzayh0YXNrSUQpXG5cbiAgICAgICAgY29uc3QgZm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2Zvcm0nKVxuICAgICAgICBmb3JtLmNsYXNzTGlzdC5hZGQoJ2RldGFpbHNGb3JtJylcbiAgICAgICAgdGFza1NlY3Rpb24uYXBwZW5kKGZvcm0pXG5cbiAgICAgICAgY29uc3QgbGVnZW5kID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGVnZW5kJylcbiAgICAgICAgbGVnZW5kLnRleHRDb250ZW50ID0gJ1Rhc2sgRGV0YWlscydcbiAgICAgICAgZm9ybS5hcHBlbmQobGVnZW5kKVxuXG4gICAgICAgIGNvbnN0IHRpdGxlQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICAgICAgdGl0bGVDb250YWluZXIuY2xhc3NMaXN0LmFkZCgnZm9ybS1jb250cm9sJylcbiAgICAgICAgZm9ybS5hcHBlbmQodGl0bGVDb250YWluZXIpXG4gICAgICAgIGNvbnN0IHRpdGxlTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpXG4gICAgICAgIHRpdGxlTGFiZWwuaHRtbEZvciA9ICd0aXRsZSdcbiAgICAgICAgdGl0bGVMYWJlbC50ZXh0Q29udGVudCA9ICdUYXNrOiAnXG4gICAgICAgIHRpdGxlQ29udGFpbmVyLmFwcGVuZCh0aXRsZUxhYmVsKVxuICAgICAgICBjb25zdCB0aXRsZUlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKVxuICAgICAgICB0aXRsZUlucHV0LnR5cGUgPSAndGV4dCdcbiAgICAgICAgdGl0bGVJbnB1dC5pZCA9ICd0aXRsZSdcbiAgICAgICAgdGl0bGVJbnB1dC52YWx1ZSA9IHRhc2sudGl0bGVcbiAgICAgICAgdGl0bGVDb250YWluZXIuYXBwZW5kKHRpdGxlSW5wdXQpXG5cbiAgICAgICAgY29uc3QgZHVlRGF0ZUNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgICAgIGR1ZURhdGVDb250YWluZXIuY2xhc3NMaXN0LmFkZCgnZm9ybS1jb250cm9sJylcbiAgICAgICAgZm9ybS5hcHBlbmQoZHVlRGF0ZUNvbnRhaW5lcilcbiAgICAgICAgY29uc3QgZHVlRGF0ZUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKVxuICAgICAgICBkdWVEYXRlTGFiZWwuaHRtbEZvciA9ICdkYXRlJ1xuICAgICAgICBkdWVEYXRlTGFiZWwudGV4dENvbnRlbnQgPSAnRHVlIERhdGU6ICdcbiAgICAgICAgZHVlRGF0ZUNvbnRhaW5lci5hcHBlbmQoZHVlRGF0ZUxhYmVsKVxuICAgICAgICBjb25zdCBkdWVEYXRlSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpXG4gICAgICAgIGR1ZURhdGVJbnB1dC50eXBlID0gJ2RhdGUnXG4gICAgICAgIGR1ZURhdGVJbnB1dC5pZCA9ICdkYXRlJ1xuICAgICAgICAvLyBkdWVEYXRlSW5wdXQudmFsdWUgPSBZWVlZLU1NLUREXG4gICAgICAgIGR1ZURhdGVDb250YWluZXIuYXBwZW5kKGR1ZURhdGVJbnB1dClcblxuICAgICAgICBjb25zdCBwcmlvcml0eUNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgICAgIHByaW9yaXR5Q29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2Zvcm0tY29udHJvbCcpXG4gICAgICAgIGZvcm0uYXBwZW5kKHByaW9yaXR5Q29udGFpbmVyKVxuICAgICAgICBjb25zdCBwcmlvcml0eUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKVxuICAgICAgICBwcmlvcml0eUxhYmVsLmh0bWxGb3IgPSAncHJpb3JpdHknXG4gICAgICAgIHByaW9yaXR5TGFiZWwudGV4dENvbnRlbnQgPSAnUHJpb3JpdHk6ICdcbiAgICAgICAgcHJpb3JpdHlDb250YWluZXIuYXBwZW5kKHByaW9yaXR5TGFiZWwpXG4gICAgICAgIGNvbnN0IHByaW9yaXR5U2VsZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2VsZWN0JylcbiAgICAgICAgcHJpb3JpdHlTZWxlY3QuaWQgPSAncHJpb3JpdHknXG4gICAgICAgIHByaW9yaXR5U2VsZWN0LmFwcGVuZChyZW5kZXJQcmlvcml0eU9wdGlvbnModGFzaywgcHJpb3JpdHlTZWxlY3QpKVxuICAgICAgICBwcmlvcml0eUNvbnRhaW5lci5hcHBlbmQocHJpb3JpdHlTZWxlY3QpXG5cbiAgICAgICAgY29uc3Qgbm90ZXNDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgICAgICBub3Rlc0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdmb3JtLWNvbnRyb2wnKVxuICAgICAgICBmb3JtLmFwcGVuZChub3Rlc0NvbnRhaW5lcilcbiAgICAgICAgY29uc3Qgbm90ZXNMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJylcbiAgICAgICAgbm90ZXNMYWJlbC5odG1sRm9yID0gJ25vdGVzJ1xuICAgICAgICBub3Rlc0xhYmVsLnRleHRDb250ZW50ID0gJ05vdGVzOiAnXG4gICAgICAgIG5vdGVzQ29udGFpbmVyLmFwcGVuZChub3Rlc0xhYmVsKVxuICAgICAgICBjb25zdCBub3RlcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RleHRhcmVhJylcbiAgICAgICAgbm90ZXMuY29scyA9IDUwXG4gICAgICAgIG5vdGVzLnJvd3MgPSAxMFxuICAgICAgICBub3Rlcy5pZCA9ICdub3RlcydcbiAgICAgICAgbm90ZXMudmFsdWUgPSB0YXNrLm5vdGVzXG4gICAgICAgIG5vdGVzQ29udGFpbmVyLmFwcGVuZChub3RlcylcblxuICAgICAgICB0YXNrRGV0YWlsTGlzdGVuZXJzKHRpdGxlSW5wdXQsIGR1ZURhdGVJbnB1dCwgcHJpb3JpdHlTZWxlY3QsIG5vdGVzLCB0YXNrKVxuICAgIH1cbiAgICBcbiAgICBmdW5jdGlvbiByZW5kZXJQcmlvcml0eU9wdGlvbnModGFzaywgcHJpb3JpdHlTZWxlY3Qpe1xuICAgICAgICBjb25zdCBwcmlvcml0aWVzID0gWydOb25lJywgJ0xvdycsICdNZWRpdW0nLCAnSGlnaCddXG5cbiAgICAgICAgZm9yIChjb25zdCBwcmlvcml0eSBvZiBwcmlvcml0aWVzKXtcbiAgICAgICAgICAgIGNvbnN0IG9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpXG4gICAgICAgICAgICBvcHRpb24udmFsdWUgPSBwcmlvcml0eVxuICAgICAgICAgICAgb3B0aW9uLnRleHRDb250ZW50ID0gcHJpb3JpdHlcbiAgICAgICAgICAgIGlmIChwcmlvcml0eS50b0xvd2VyQ2FzZSgpID09PSB0YXNrLnByaW9yaXR5KXtcbiAgICAgICAgICAgICAgICBvcHRpb24uc2VsZWN0ZWQgPSB0cnVlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwcmlvcml0eVNlbGVjdC5hcHBlbmQob3B0aW9uKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdGFza0RldGFpbExpc3RlbmVycyh0aXRsZUlucHV0LCBkdWVEYXRlSW5wdXQsIHByaW9yaXR5U2VsZWN0LCBub3RlcywgdGFzaykge1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpe1xuICAgICAgICAgICAgY29uc29sZS5sb2coZS50YXJnZXQsIGUudGFyZ2V0LmZvcm0pXG4gICAgICAgIH0pXG5cbiAgICAgICAgdGl0bGVJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoZSkgPT4ge3VwZGF0ZVRhc2tUaXRsZSh0YXNrLCBlLnRhcmdldC52YWx1ZSl9KVxuICAgICAgICBkdWVEYXRlSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgdXBkYXRlVGFza0R1ZURhdGUpXG4gICAgICAgIHByaW9yaXR5U2VsZWN0LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIHVwZGF0ZVRhc2tQcmlvcml0eSlcbiAgICAgICAgbm90ZXMuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgdXBkYXRlVGFza05vdGVzKVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHVwZGF0ZVRhc2tUaXRsZSh0YXNrLCBuZXdUaXRsZSl7XG4gICAgICAgIGNvbnNvbGUubG9nKHRhc2ssIG5ld1RpdGxlKVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHVwZGF0ZVRhc2tEdWVEYXRlKHRhc2ssIG5ld0RhdGUpe1xuICAgICAgICBjb25zb2xlLmxvZyh0YXNrLCBuZXdEYXRlKVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHVwZGF0ZVRhc2tQcmlvcml0eSh0YXNrLCBuZXdQcmlvcml0eSl7XG4gICAgICAgIGNvbnNvbGUubG9nKHRhc2ssIG5ld1ByaW9yaXR5KVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHVwZGF0ZVRhc2tOb3Rlcyh0YXNrLCBuZXdOb3Rlcyl7XG4gICAgICAgIGNvbnNvbGUubG9nKHRhc2ssIG5ld05vdGVzKVxuICAgIH1cblxuICAgIC8vIEhFTFBFUiBGVU5DVElPTlNcbiAgICBmdW5jdGlvbiBjbGVhclRhc2tzKCl7XG4gICAgICAgIHRhc2tzQ29udGFpbmVyLmlubmVySFRNTCA9ICcnXG4gICAgICAgIGNvbXBsZXRlZENvbnRhaW5lci5pbm5lckhUTUwgPSAnJ1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNhcGl0YWxpemVTdHJpbmcoc3RyaW5nKXtcbiAgICAgICAgbGV0IHN0cmluZ0FyciA9IHN0cmluZy5zcGxpdCgnICcpXG4gICAgICAgIHJldHVybiBzdHJpbmdBcnIubWFwKHdvcmQgPT4gd29yZFswXS50b1VwcGVyQ2FzZSgpICsgd29yZC5zbGljZSgxKSkuam9pbignICcpXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0UHJvamVjdFRpdGxlKCl7XG4gICAgICAgIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdoMS5wcm9qZWN0LXRpdGxlJykudGV4dENvbnRlbnQudG9Mb3dlckNhc2UoKVxuICAgIH1cblxuXG5cbiAgICByZXR1cm4ge1xuICAgICAgICBpbml0TGlzdGVuZXJzXG4gICAgfVxufSkoKVxuXG5leHBvcnQgeyBET00gfVxuIiwiaW1wb3J0ICcuL3N0eWxlLmNzcydcbmltcG9ydCB7IERPTSB9IGZyb20gJy4vbW9kdWxlcy9kb20nXG5cblxuRE9NLmluaXRMaXN0ZW5lcnMoKSJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwibmMiLCJQcm9qZWN0IiwiY29uc3RydWN0b3IiLCJ0aXRsZSIsInRhc2tzIiwiYWxsUHJvamVjdHMiLCJzdGF0aWMiLCJwcm9qZWN0VGl0bGUiLCJzb21lIiwicHJvamVjdCIsImZpbmQiLCJmaWx0ZXIiLCJwcm9qZWN0cyIsInNldFRhc2tzIiwidG9kb0xlbmd0aCIsInRhc2siLCJjb21wbGV0ZWQiLCJjb21wbGV0ZWRMZW5ndGgiLCJ0b2RvVGFza3MiLCJjb21wbGV0ZWRUYXNrcyIsImdldFRhc2siLCJ0YXNrSUQiLCJzZXRUYXNrIiwicmVtb3ZlVGFzayIsIlRhc2siLCJwcmlvcml0eSIsIm5vdGVzIiwic2V0VGl0bGUiLCJ2YWx1ZSIsImdldER1ZURhdGUiLCJkdWVEYXRlIiwic2V0RHVlRGF0ZSIsImRhdGUiLCJzZXRQcmlvcml0eSIsInNldE5vdGVzIiwidG9nZ2xlQ29tcGxldGlvbiIsIkRPTSIsInByb2plY3RDb250YWluZXIiLCJhZGRQcm9qZWN0Q29udGFpbmVyIiwiYWRkUHJvamVjdEJ0biIsInRhc2tTZWN0aW9uIiwidGFza3NDb250YWluZXIiLCJhZGRUYXNrQ29udGFpbmVyIiwiYWRkVGFza0J0biIsImNvbXBsZXRlZENvbnRhaW5lciIsImxvYWRQcm9qZWN0RXZlbnQiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsIm5vZGUiLCJnZXRQcm9qZWN0IiwiZGF0YXNldCIsInJlbW92ZVByb2plY3QiLCJzZXRBY3RpdmVQcm9qZWN0IiwiZGVsZXRlUHJvamVjdCIsInBhcmVudEVsZW1lbnQiLCJvbGRBY3RpdmUiLCJ0b2dnbGUiLCJhZGQiLCJpbm5lckhUTUwiLCJ0ZXh0Q29udGVudCIsImNhcGl0YWxpemVTdHJpbmciLCJ1cGRhdGVUb3RhbFRvZG9UYXNrc0xlbmd0aCIsInVwZGF0ZUNvbXBsZXRlZFRhc2tzTGVuZ3RoIiwiYXBwZW5kIiwicmVuZGVyVGFzayIsInJlbmRlclVuY29tcGxldGVkVGFza3MiLCJyZW5kZXJDb21wbGV0ZWRUYXNrcyIsImxvYWRUYXNrRXZlbnQiLCJnZXRQcm9qZWN0VGl0bGUiLCJ0YXNrQ2FyZCIsIk51bWJlciIsInRhc2tJZCIsImljb24iLCJ1cGRhdGVDaGVja2JveCIsInByZXBlbmQiLCJ0b2dnbGVUYXNrQ29tcGxldGlvbiIsImRlbGV0ZVRhc2siLCJjb25zb2xlIiwibG9nIiwiZm9ybSIsImxlZ2VuZCIsInRpdGxlQ29udGFpbmVyIiwidGl0bGVMYWJlbCIsImh0bWxGb3IiLCJ0aXRsZUlucHV0IiwidHlwZSIsImR1ZURhdGVDb250YWluZXIiLCJkdWVEYXRlTGFiZWwiLCJkdWVEYXRlSW5wdXQiLCJwcmlvcml0eUNvbnRhaW5lciIsInByaW9yaXR5TGFiZWwiLCJwcmlvcml0eVNlbGVjdCIsInByaW9yaXRpZXMiLCJvcHRpb24iLCJ0b0xvd2VyQ2FzZSIsInNlbGVjdGVkIiwicmVuZGVyUHJpb3JpdHlPcHRpb25zIiwibm90ZXNDb250YWluZXIiLCJub3Rlc0xhYmVsIiwiY29scyIsInJvd3MiLCJhZGRFdmVudExpc3RlbmVyIiwibmV3VGl0bGUiLCJ1cGRhdGVUYXNrVGl0bGUiLCJ1cGRhdGVUYXNrRHVlRGF0ZSIsInVwZGF0ZVRhc2tQcmlvcml0eSIsInVwZGF0ZVRhc2tOb3RlcyIsInRhc2tEZXRhaWxMaXN0ZW5lcnMiLCJyZW5kZXJUYXNrRGV0YWlsc0Zvcm0iLCJjYXJkIiwiY2hlY2tib3giLCJ0YXNrSW5mbyIsInRhc2tUaXRsZSIsImRpdiIsImRheSIsInJlbmRlclRhc2tEZXRhaWxzIiwicmVuZGVyTW9kaWZ5QnV0dG9ucyIsInJlbmRlck5ld0Zvcm0iLCJpbnB1dCIsInBsYWNlaG9sZGVyIiwiYnRuQ29udGFpbmVyIiwiYWRkQnRuIiwiY2FuY2VsQnRuIiwiZGlzcGxheSIsInByZXZlbnREZWZhdWx0IiwiYWxlcnQiLCJuZXdUYXNrIiwidXBkYXRlUHJvamVjdHNUYXNrIiwicmVtb3ZlRm9ybSIsImNyZWF0ZU5ld1Rhc2siLCJjb250YWluc1Byb2plY3QiLCJwcm9qZWN0SW5mbyIsInNwYW4iLCJyZW5kZXJQcm9qZWN0IiwiY3JlYXRlTmV3UHJvamVjdCIsImZvY3VzIiwiZGVsZXRlSWNvbiIsIm5ld0RhdGUiLCJuZXdQcmlvcml0eSIsIm5ld05vdGVzIiwic3RyaW5nIiwic3BsaXQiLCJ3b3JkIiwidG9VcHBlckNhc2UiLCJzbGljZSIsImluaXRMaXN0ZW5lcnMiXSwic291cmNlUm9vdCI6IiJ9