(()=>{"use strict";var n={426:(n,t,e)=>{e.d(t,{Z:()=>i});var o=e(537),r=e.n(o),a=e(645),c=e.n(a)()(r());c.push([n.id,":root {\n    --secondary-dark: #21212b;\n    --main-dark: #181820;\n    --pink: #fc76a1;\n    --main-text-color: #d5d5d7;\n    --secondary-text-color: #a7a7ab;\n    --project-text-color: #e2e2e3;\n    --active: #383846;\n    --active-hover: #272732;\n}\n* {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n\n.main {\n    font-size: 18px;\n    display: flex;\n    min-height: 100vh;\n    background-color: var(--main-dark);\n}\n\n/* PROJECT SIDEBAR */\n\n.sidebar {\n    background-color: var(--secondary-dark);\n    min-width: 250px;\n    width: 350px;\n    color: var(--project-text-color)\n}\n\n.sidebar h2 {\n     margin: 25px;\n    color: var(--secondary-text-color);\n}\n\n.project {\n    display: flex;\n    padding: 25px;\n    justify-content: space-between;\n}\n\n.project:hover {\n    cursor: pointer;\n    background-color: var(--active-hover);\n}\n\n.project-info {\n    pointer-events: none;\n}\n\n.active {\n    background-color: var(--active);\n}\n\n.sidebar .project-title {\n    margin-left: 10px;\n    margin-right: 10px;\n    font-weight: 700;\n}\n\n.add-project {\n    display: flex;\n    flex-direction: column;\n    padding: 25px;\n}\n\n/* TASKS */\n.container {\n    width: 50%;\n}\n\n.tasks {\n    color: var(--main-text-color);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    margin-top: 100px;\n    position: relative;\n}\n\n.tasks-container {\n    margin-bottom: 30px;\n}\n\n.tasks .project-title {\n    color: #fff;\n    margin-bottom: 30px;\n}\n\n.counter {\n    margin-bottom: 15px;\n}\n\n.tasks-container .card:hover {\n    background-color: var(--active-hover);\n    cursor: pointer;\n}   \n\n.card {\n    display: flex;\n    background-color: var(--secondary-dark);\n    border-radius: 15px;\n    margin-bottom: 10px;\n    padding: 15px;\n}\n\n.task-details {\n    font-size: .9rem;\n    color: var(--secondary-text-color);\n}\n\n.priority > .none {\n    display:  none;\n}\n\n.priority > .low {\n    color: rgb(31, 194, 31);\n}\n\n.priority > .medium {\n    color: yellow\n}\n\n.priority > .high {\n    color: rgb(255, 75, 75);\n}\n\n.completed {\n    text-decoration: line-through;\n    text-decoration-color: #fff;\n    text-decoration-thickness: 1.5px;\n}\n\n/* FORM BUTTONS/CONTROL */\n\n.btn {\n    display: flex;\n    align-items: center;\n    border: 2px solid var(--secondary-dark);\n    padding: 15px;\n    background-color: var(--main-dark);\n    color: var(--main-text-color);\n    cursor: pointer;\n    border-radius: 10px;\n}\n\n.btn:hover {\n    background-color: var(--active-hover);\n}\n\n.project:hover .modify-buttons,\n.card:hover .modify-buttons{\n    display: block;\n}\n\n.modify-buttons {\n    display: none;\n    margin-left: auto;\n    align-self: center;\n}\n\n.modify-buttons i:hover {\n color: var(--pink)\n}\n\n.add-icon {\n    width: 30px;\n    height: 30px;\n    color: var(--main-dark);\n    background-color: var(--pink);\n    border-radius: 10px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-right: 10px;\n}\n\n.add-task .btn{\n    width: 100%;\n}\n\n.add-task {\n    padding: 0;\n    margin-bottom: 30px;\n}\n\n.checkbox {\n    width: 18px;\n    height: 18px;\n    border: 2px solid var(--pink);\n    border-radius: 5px;\n    margin-right: 10px;\n}\n\n.checkbox:hover {\n    cursor: pointer;\n}\n\n.checked {\n    color: var(--main-dark);\n    background-color: var(--pink);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.popout-btns {\n    display: flex;\n    gap: 20px;\n    justify-content: center;\n}\n\n.popout-btns button {\n    width: 100px;\n    height: 30px;\n    padding: 5px;\n}\n\n.projectForm {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.project-input, .task-input {\n    height: 35px;\n    padding: 5px;\n    margin-bottom: 10px;\n    border-radius: 5px;\n}\n\n.taskForm {\n    width: 100%;\n    padding: 15px;\n}\n\n.task-input {\n    width: 100%;\n}\n\n.fa-check {\n    pointer-events: none;\n}\n\n/* FORM / POPOUT TASK DETAILS */\n.detailsForm {\n    letter-spacing: 1px;\n    color: black;\n    position: absolute;\n    padding: 15px;\n    min-width: 500px;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: #fff;\n    border-radius: 15px;\n}\n\n.form-control {\n    margin-top: 15px;\n    margin-bottom: 15px;\n}\n\ntextarea {\n    padding: 10px;\n    max-width: 100%;\n    line-height: 1.5;\n    border-radius: 5px;\n    border: 1px solid #ccc;\n    box-shadow: 1px 1px 1px #999;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:[":root {\n    --secondary-dark: #21212b;\n    --main-dark: #181820;\n    --pink: #fc76a1;\n    --main-text-color: #d5d5d7;\n    --secondary-text-color: #a7a7ab;\n    --project-text-color: #e2e2e3;\n    --active: #383846;\n    --active-hover: #272732;\n}\n* {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n\n.main {\n    font-size: 18px;\n    display: flex;\n    min-height: 100vh;\n    background-color: var(--main-dark);\n}\n\n/* PROJECT SIDEBAR */\n\n.sidebar {\n    background-color: var(--secondary-dark);\n    min-width: 250px;\n    width: 350px;\n    color: var(--project-text-color)\n}\n\n.sidebar h2 {\n     margin: 25px;\n    color: var(--secondary-text-color);\n}\n\n.project {\n    display: flex;\n    padding: 25px;\n    justify-content: space-between;\n}\n\n.project:hover {\n    cursor: pointer;\n    background-color: var(--active-hover);\n}\n\n.project-info {\n    pointer-events: none;\n}\n\n.active {\n    background-color: var(--active);\n}\n\n.sidebar .project-title {\n    margin-left: 10px;\n    margin-right: 10px;\n    font-weight: 700;\n}\n\n.add-project {\n    display: flex;\n    flex-direction: column;\n    padding: 25px;\n}\n\n/* TASKS */\n.container {\n    width: 50%;\n}\n\n.tasks {\n    color: var(--main-text-color);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    margin-top: 100px;\n    position: relative;\n}\n\n.tasks-container {\n    margin-bottom: 30px;\n}\n\n.tasks .project-title {\n    color: #fff;\n    margin-bottom: 30px;\n}\n\n.counter {\n    margin-bottom: 15px;\n}\n\n.tasks-container .card:hover {\n    background-color: var(--active-hover);\n    cursor: pointer;\n}   \n\n.card {\n    display: flex;\n    background-color: var(--secondary-dark);\n    border-radius: 15px;\n    margin-bottom: 10px;\n    padding: 15px;\n}\n\n.task-details {\n    font-size: .9rem;\n    color: var(--secondary-text-color);\n}\n\n.priority > .none {\n    display:  none;\n}\n\n.priority > .low {\n    color: rgb(31, 194, 31);\n}\n\n.priority > .medium {\n    color: yellow\n}\n\n.priority > .high {\n    color: rgb(255, 75, 75);\n}\n\n.completed {\n    text-decoration: line-through;\n    text-decoration-color: #fff;\n    text-decoration-thickness: 1.5px;\n}\n\n/* FORM BUTTONS/CONTROL */\n\n.btn {\n    display: flex;\n    align-items: center;\n    border: 2px solid var(--secondary-dark);\n    padding: 15px;\n    background-color: var(--main-dark);\n    color: var(--main-text-color);\n    cursor: pointer;\n    border-radius: 10px;\n}\n\n.btn:hover {\n    background-color: var(--active-hover);\n}\n\n.project:hover .modify-buttons,\n.card:hover .modify-buttons{\n    display: block;\n}\n\n.modify-buttons {\n    display: none;\n    margin-left: auto;\n    align-self: center;\n}\n\n.modify-buttons i:hover {\n color: var(--pink)\n}\n\n.add-icon {\n    width: 30px;\n    height: 30px;\n    color: var(--main-dark);\n    background-color: var(--pink);\n    border-radius: 10px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-right: 10px;\n}\n\n.add-task .btn{\n    width: 100%;\n}\n\n.add-task {\n    padding: 0;\n    margin-bottom: 30px;\n}\n\n.checkbox {\n    width: 18px;\n    height: 18px;\n    border: 2px solid var(--pink);\n    border-radius: 5px;\n    margin-right: 10px;\n}\n\n.checkbox:hover {\n    cursor: pointer;\n}\n\n.checked {\n    color: var(--main-dark);\n    background-color: var(--pink);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.popout-btns {\n    display: flex;\n    gap: 20px;\n    justify-content: center;\n}\n\n.popout-btns button {\n    width: 100px;\n    height: 30px;\n    padding: 5px;\n}\n\n.projectForm {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.project-input, .task-input {\n    height: 35px;\n    padding: 5px;\n    margin-bottom: 10px;\n    border-radius: 5px;\n}\n\n.taskForm {\n    width: 100%;\n    padding: 15px;\n}\n\n.task-input {\n    width: 100%;\n}\n\n.fa-check {\n    pointer-events: none;\n}\n\n/* FORM / POPOUT TASK DETAILS */\n.detailsForm {\n    letter-spacing: 1px;\n    color: black;\n    position: absolute;\n    padding: 15px;\n    min-width: 500px;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: #fff;\n    border-radius: 15px;\n}\n\n.form-control {\n    margin-top: 15px;\n    margin-bottom: 15px;\n}\n\ntextarea {\n    padding: 10px;\n    max-width: 100%;\n    line-height: 1.5;\n    border-radius: 5px;\n    border: 1px solid #ccc;\n    box-shadow: 1px 1px 1px #999;\n}"],sourceRoot:""}]);const i=c},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var c={};if(o)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(c[s]=!0)}for(var A=0;A<n.length;A++){var d=[].concat(n[A]);o&&c[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),e&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=e):d[2]=e),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),t.push(d))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),c=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[t].concat(c).concat([a]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var a={},c=[],i=0;i<n.length;i++){var s=n[i],A=o.base?s[0]+o.base:s[0],d=a[A]||0,l="".concat(A," ").concat(d);a[A]=d+1;var p=e(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var m=r(u,o);o.byIndex=i,t.splice(i,0,{identifier:l,updater:m,references:1})}c.push(l)}return c}function r(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var c=0;c<a.length;c++){var i=e(a[c]);t[i].references--}for(var s=o(n,r),A=0;A<a.length;A++){var d=e(a[A]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}a=s}}},569:n=>{var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,r&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return n[o](a,a.exports,e),a.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),e.nc=void 0,(()=>{var n=e(379),t=e.n(n),o=e(795),r=e.n(o),a=e(569),c=e.n(a),i=e(565),s=e.n(i),A=e(216),d=e.n(A),l=e(589),p=e.n(l),u=e(426),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=c().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=d(),t()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;class C{constructor(n){this.title=n,this.tasks=[],C.allProjects.push(this)}static allProjects=[];static containsProject(n){return C.allProjects.some((t=>t.title===n))}static getProject(n){return C.allProjects.find((t=>t.title===n))}static removeProject(n){C.allProjects=C.allProjects.filter((t=>t.title!==n))}static setAllProjects(n){C.allProjects=n}setTasks(n){this.tasks=n}get todoLength(){return this.tasks.filter((n=>!n.completed)).length}get completedLength(){return this.tasks.filter((n=>n.completed)).length}get todoTasks(){return this.tasks.filter((n=>!n.completed))}get completedTasks(){return this.tasks.filter((n=>n.completed))}getTask(n){return this.tasks.find((({id:t})=>t===n))}setTask(n){this.tasks.push(n)}removeTask(n){this.tasks=this.tasks.filter((t=>t.id!=n))}}let f=0;class B{constructor(n){this.title=n,this.completed=!1,this.id=f++,this.priority="none",this.notes=""}setTitle(n){this.title=n}setDueDate(n){this.dueDate=n}setPriority(n){this.priority=n}setNotes(n){this.notes=n}toggleCompletion(){this.completed?this.completed=!1:this.completed=!0}}const g=(()=>{const n=document.querySelector(".project-container"),t=document.querySelector(".add-project"),e=document.querySelector("#add-project"),o=document.querySelector(".tasks"),r=document.querySelector(".tasks-container"),a=document.querySelector(".add-task"),c=document.querySelector("#add-task"),i=document.querySelector(".completed-tasks");function s(n){n.target.classList.contains("fa-xmark")?function(n){const t=C.getProject(n.dataset.projectTitle);C.removeProject(t.title),n.remove(),A(document.querySelector(".project"))}(n.target.parentElement.parentElement):A(n.target)}function A(n){const t=document.querySelector(".active");var e;t&&t.classList.toggle("active"),n.classList.add("active"),r.innerHTML="",i.innerHTML="",e=C.getProject(n.dataset.projectTitle),document.querySelector("h1.project-title").textContent=v(e.title),p(),u(),function(n){const t=n.todoTasks;for(const n of t)r.append(l(n))}(e),function(n){const t=n.completedTasks;for(const n of t)i.append(l(n))}(e)}function d(n){if(n.target.classList.contains("checkbox"))!function(n){const t=C.getProject(h()),e=n.parentElement,o=t.getTask(Number(e.dataset.taskId));e.remove(),o.toggleCompletion(),function(n,t){if(t.classList.toggle("checked"),n.completed){const n=document.createElement("i");n.classList.add("fa-solid","fa-check"),t.append(n)}}(o,n),p(),u(),o.completed?i.prepend(l(o)):r.prepend(l(o))}(n.target);else if(n.target.classList.contains("fa-xmark"))!function(n){const t=C.getProject(h()),e=n.parentElement.parentElement,o=Number(e.dataset.taskId),r=t.getTask(o);t.removeTask(o),e.remove(),r.completed?u():p()}(n.target);else if(n.target.classList.contains("card")){const t=Number(n.target.dataset.taskId);!function(n){const t=C.getProject(h()).getTask(n),e=document.createElement("form");e.classList.add("detailsForm"),o.append(e);const r=document.createElement("legend");r.textContent="Task Details",e.append(r);const a=document.createElement("div");a.classList.add("form-control"),e.append(a);const c=document.createElement("label");c.htmlFor="title",c.textContent="Task: ",a.append(c);const i=document.createElement("input");i.type="text",i.id="title",i.value=t.title,a.append(i);const s=document.createElement("div");s.classList.add("form-control"),e.append(s);const A=document.createElement("label");A.htmlFor="date",A.textContent="Due Date: ",s.append(A);const d=document.createElement("input");d.type="date",d.id="date",s.append(d);const l=document.createElement("div");l.classList.add("form-control"),e.append(l);const p=document.createElement("label");p.htmlFor="priority",p.textContent="Priority: ",l.append(p);const u=document.createElement("select");u.id="priority",function(n,t){const e=["None","Low","Medium","High"];for(const o of e){const e=document.createElement("option");e.value=o.toLowerCase(),e.textContent=o,o.toLowerCase()===n.priority&&(e.selected=!0),t.append(e)}}(t,u),l.append(u);const m=document.createElement("div");m.classList.add("form-control"),e.append(m);const f=document.createElement("label");f.htmlFor="notes",f.textContent="Notes: ",m.append(f);const B=document.createElement("textarea");B.cols=50,B.rows=10,B.id="notes",B.value=t.notes,m.append(B);const g=document.createElement("input");g.type="submit",g.disabled=!0,g.style.display="none",g.ariaHidden="true",e.append(g)}(t),setTimeout((()=>{!function(n,t){const e=document.querySelector(".detailsForm"),o=C.getProject(h()).getTask(t);e.elements.title.addEventListener("change",(t=>{!function(n,t,e){n.setTitle(e),t.querySelector(".task-title").textContent=e}(o,n,t.target.value)})),e.elements.date.addEventListener("change",(n=>{n.target.value})),e.elements.priority.addEventListener("change",(t=>{!function(n,t,e){const o=t.querySelector(".fa-triangle-exclamation");o.classList.remove(n.priority),n.setPriority(e),o.classList.add(n.priority)}(o,n,t.target.value)})),e.elements.notes.addEventListener("change",(n=>{!function(n,t){console.log(n.notes),n.setNotes(t),console.log(n.notes)}(o,n.target.value)})),setTimeout((()=>{document.addEventListener("click",x)}),0)}(n.target,t)}),0)}}function l(n){const t=document.createElement("div");t.dataset.taskId=n.id,t.classList.add("card");const e=document.createElement("div");e.classList.add("checkbox"),t.append(e);const o=document.createElement("div");o.classList.add("task-info"),t.append(o);const r=document.createElement("p");if(r.classList.add("task-title"),r.textContent=n.title,o.append(r),n.completed){e.classList.add("checked"),r.classList.add("completed");const n=document.createElement("i");n.classList.add("fa-solid","fa-check"),e.append(n)}return o.append(function(n){const t=document.createElement("div");return t.classList.add("task-details"),t.append(function(n){const t=document.createElement("div");if(t.classList.add("due-date"),n.dueDate){const n=document.createElement("i");n.classList.add("fa-solid","fa-calendar"),t.append(n);const e=document.createElement("span");e.classList.add("day"),e.textContent="due soon",t.append(e)}return t}(n)),t.append(function(n){const t=document.createElement("div");t.classList.add("priority");const e=document.createElement("i");return e.classList.add("fa-solid","fa-triangle-exclamation",`${n.priority}`),t.append(e),t}(n)),t}(n)),t.append(f()),t}function p(){const n=h(),t=C.getProject(n);document.querySelector(".total-tasks").textContent=t.todoLength}function u(){const n=h(),t=C.getProject(n);document.querySelector(".total-completed-tasks").textContent=t.completedLength}function m(o){const i=document.createElement("form");i.classList.add(`${o}Form`);const s=document.createElement("input");s.type="text",s.placeholder=`Enter ${o}`,s.classList.add(`${o}-input`),i.append(s);const A=document.createElement("div");A.classList.add("popout-btns"),i.append(A);const d=document.createElement("button");d.textContent="Add",A.append(d);const u=document.createElement("button");u.textContent="Cancel",A.append(u),"task"===o?(c.style.display="none",a.append(i),d.addEventListener("click",(n=>{!function(n,t){if(t.preventDefault(),!n)return alert("Please enter a name for your task"),!1;const e=new B(n);!function(n){const t=h();C.getProject(t).setTask(n)}(e),p(),r.prepend(l(e)),g("task")}(s.value,n)})),u.addEventListener("click",(()=>{g("task")}))):(e.style.display="none",t.append(i),d.addEventListener("click",(t=>{!function(t,e){e.preventDefault(),t?C.containsProject(t)?alert("Name is already in use"):(function(t){const e=document.createElement("div");e.classList.add("project"),e.dataset.projectTitle=t.title,n.append(e);const o=document.createElement("div");o.classList.add("project-info"),e.append(o);const r=document.createElement("i");r.classList.add("fa-solid","fa-book-open"),o.append(r);const a=document.createElement("span");a.classList.add("project-title"),a.textContent=v(t.title),o.append(a),e.append(f())}(new C(t)),g("project")):alert("Please enter a name for your project")}(s.value,t)})),u.addEventListener("click",(()=>{g("project")}))),s.focus()}function f(){const n=document.createElement("div");n.classList.add("modify-buttons");const t=document.createElement("i");return t.classList.add("fa-solid","fa-xmark"),n.append(t),n}function g(n){document.querySelector(`.${n}Form`).remove(),"project"===n?e.style.display="flex":c.style.display="flex"}function x(n){const t=document.querySelector(".detailsForm");t.contains(n.target)||(t.remove(),document.removeEventListener("click",x))}function v(n){return n.split(" ").map((n=>n[0].toUpperCase()+n.slice(1))).join(" ")}function h(){return document.querySelector("h1.project-title").textContent.toLowerCase()}return{initListeners:function(){n.addEventListener("click",s),e.addEventListener("click",(()=>{m("project")})),r.addEventListener("click",d),i.addEventListener("click",d),c.addEventListener("click",(()=>{m("task")}))}}})();g.initListeners()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LFNBQVNuQixJQUNMLE1BQU1jLEVBQU03TCxTQUFTVyxjQUFjLE9BQ25Da0wsRUFBSWhHLFVBQVVXLElBQUksa0JBRWxCLE1BQU0yRixFQUFhbk0sU0FBU1csY0FBYyxLQUcxQyxPQUZBd0wsRUFBV3RHLFVBQVVXLElBQUksV0FBWSxZQUNyQ3FGLEVBQUkvRSxPQUFPcUYsR0FDSk4sQ0FDWCxDQUVBLFNBQVNILEVBQWN4RCxHQUNObEksU0FBU0MsY0FBYyxJQUFJaUksU0FDbkM5SSxTQUVJLFlBQVQ4SSxFQUFxQjVDLEVBQWN6RixNQUFNdUosUUFBVSxPQUFTMUQsRUFBVzdGLE1BQU11SixRQUFVLE1BQzNGLENBd0dBLFNBQVNjLEVBQWlCNUosR0FDdEIsTUFBTXNILEVBQU81SCxTQUFTQyxjQUFjLGdCQUMvQjJILEVBQUs5QixTQUFTeEYsRUFBRVIsVUFDakI4SCxFQUFLeEksU0FDTFksU0FBU29NLG9CQUFvQixRQUFTbEMsR0FFOUMsQ0FnQ0EsU0FBU3ZELEVBQWlCMEYsR0FFdEIsT0FEZ0JBLEVBQU9DLE1BQU0sS0FDWnZRLEtBQUl3USxHQUFRQSxFQUFLLEdBQUdDLGNBQWdCRCxFQUFLRSxNQUFNLEtBQUlwUSxLQUFLLElBQzdFLENBRUEsU0FBUzhLLElBQ0wsT0FBT25ILFNBQVNDLGNBQWMsb0JBQW9CeUcsWUFBWWlDLGFBQ2xFLENBSUEsTUFBTyxDQUNIK0QsY0FqZUosV0FDSXRILEVBQWlCcUUsaUJBQWlCLFFBQVM3RCxHQUMzQ04sRUFBY21FLGlCQUFpQixTQUFTLEtBQU91QixFQUFjLFVBQVMsSUFDdEV4RixFQUFlaUUsaUJBQWlCLFFBQVN2QyxHQUN6Q3ZCLEVBQW1COEQsaUJBQWlCLFFBQVN2QyxHQUM3Q3hCLEVBQVcrRCxpQkFBaUIsU0FBUyxLQUFPdUIsRUFBYyxPQUFNLEdBQ3BFLEVBNmRILEVBOWVXLEdDRFo3RixFQUFJdUgsZSIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG8tYXBwLy4vc3JjL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly90b2RvLWFwcC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vdG9kby1hcHAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly90b2RvLWFwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly90b2RvLWFwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vdG9kby1hcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdG9kby1hcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vdG9kby1hcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly90b2RvLWFwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3RvZG8tYXBwL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3RvZG8tYXBwL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3RvZG8tYXBwL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90b2RvLWFwcC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3RvZG8tYXBwL3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly90b2RvLWFwcC8uL3NyYy9zdHlsZS5jc3M/NzE2MyIsIndlYnBhY2s6Ly90b2RvLWFwcC8uL3NyYy9tb2R1bGVzL3Byb2plY3QuanMiLCJ3ZWJwYWNrOi8vdG9kby1hcHAvLi9zcmMvbW9kdWxlcy90YXNrLmpzIiwid2VicGFjazovL3RvZG8tYXBwLy4vc3JjL21vZHVsZXMvZG9tLmpzIiwid2VicGFjazovL3RvZG8tYXBwLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiOnJvb3Qge1xcbiAgICAtLXNlY29uZGFyeS1kYXJrOiAjMjEyMTJiO1xcbiAgICAtLW1haW4tZGFyazogIzE4MTgyMDtcXG4gICAgLS1waW5rOiAjZmM3NmExO1xcbiAgICAtLW1haW4tdGV4dC1jb2xvcjogI2Q1ZDVkNztcXG4gICAgLS1zZWNvbmRhcnktdGV4dC1jb2xvcjogI2E3YTdhYjtcXG4gICAgLS1wcm9qZWN0LXRleHQtY29sb3I6ICNlMmUyZTM7XFxuICAgIC0tYWN0aXZlOiAjMzgzODQ2O1xcbiAgICAtLWFjdGl2ZS1ob3ZlcjogIzI3MjczMjtcXG59XFxuKiB7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuXFxuLm1haW4ge1xcbiAgICBmb250LXNpemU6IDE4cHg7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1tYWluLWRhcmspO1xcbn1cXG5cXG4vKiBQUk9KRUNUIFNJREVCQVIgKi9cXG5cXG4uc2lkZWJhciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXNlY29uZGFyeS1kYXJrKTtcXG4gICAgbWluLXdpZHRoOiAyNTBweDtcXG4gICAgd2lkdGg6IDM1MHB4O1xcbiAgICBjb2xvcjogdmFyKC0tcHJvamVjdC10ZXh0LWNvbG9yKVxcbn1cXG5cXG4uc2lkZWJhciBoMiB7XFxuICAgICBtYXJnaW46IDI1cHg7XFxuICAgIGNvbG9yOiB2YXIoLS1zZWNvbmRhcnktdGV4dC1jb2xvcik7XFxufVxcblxcbi5wcm9qZWN0IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgcGFkZGluZzogMjVweDtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbn1cXG5cXG4ucHJvamVjdDpob3ZlciB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWN0aXZlLWhvdmVyKTtcXG59XFxuXFxuLnByb2plY3QtaW5mbyB7XFxuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbn1cXG5cXG4uYWN0aXZlIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWN0aXZlKTtcXG59XFxuXFxuLnNpZGViYXIgLnByb2plY3QtdGl0bGUge1xcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xcbiAgICBmb250LXdlaWdodDogNzAwO1xcbn1cXG5cXG4uYWRkLXByb2plY3Qge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBwYWRkaW5nOiAyNXB4O1xcbn1cXG5cXG4vKiBUQVNLUyAqL1xcbi5jb250YWluZXIge1xcbiAgICB3aWR0aDogNTAlO1xcbn1cXG5cXG4udGFza3Mge1xcbiAgICBjb2xvcjogdmFyKC0tbWFpbi10ZXh0LWNvbG9yKTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIG1hcmdpbi10b3A6IDEwMHB4O1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcblxcbi50YXNrcy1jb250YWluZXIge1xcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xcbn1cXG5cXG4udGFza3MgLnByb2plY3QtdGl0bGUge1xcbiAgICBjb2xvcjogI2ZmZjtcXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcXG59XFxuXFxuLmNvdW50ZXIge1xcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xcbn1cXG5cXG4udGFza3MtY29udGFpbmVyIC5jYXJkOmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWN0aXZlLWhvdmVyKTtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn0gICBcXG5cXG4uY2FyZCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXNlY29uZGFyeS1kYXJrKTtcXG4gICAgYm9yZGVyLXJhZGl1czogMTVweDtcXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcXG4gICAgcGFkZGluZzogMTVweDtcXG59XFxuXFxuLnRhc2stZGV0YWlscyB7XFxuICAgIGZvbnQtc2l6ZTogLjlyZW07XFxuICAgIGNvbG9yOiB2YXIoLS1zZWNvbmRhcnktdGV4dC1jb2xvcik7XFxufVxcblxcbi5wcmlvcml0eSA+IC5ub25lIHtcXG4gICAgZGlzcGxheTogIG5vbmU7XFxufVxcblxcbi5wcmlvcml0eSA+IC5sb3cge1xcbiAgICBjb2xvcjogcmdiKDMxLCAxOTQsIDMxKTtcXG59XFxuXFxuLnByaW9yaXR5ID4gLm1lZGl1bSB7XFxuICAgIGNvbG9yOiB5ZWxsb3dcXG59XFxuXFxuLnByaW9yaXR5ID4gLmhpZ2gge1xcbiAgICBjb2xvcjogcmdiKDI1NSwgNzUsIDc1KTtcXG59XFxuXFxuLmNvbXBsZXRlZCB7XFxuICAgIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xcbiAgICB0ZXh0LWRlY29yYXRpb24tY29sb3I6ICNmZmY7XFxuICAgIHRleHQtZGVjb3JhdGlvbi10aGlja25lc3M6IDEuNXB4O1xcbn1cXG5cXG4vKiBGT1JNIEJVVFRPTlMvQ09OVFJPTCAqL1xcblxcbi5idG4ge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCB2YXIoLS1zZWNvbmRhcnktZGFyayk7XFxuICAgIHBhZGRpbmc6IDE1cHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1haW4tZGFyayk7XFxuICAgIGNvbG9yOiB2YXIoLS1tYWluLXRleHQtY29sb3IpO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxufVxcblxcbi5idG46aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY3RpdmUtaG92ZXIpO1xcbn1cXG5cXG4ucHJvamVjdDpob3ZlciAubW9kaWZ5LWJ1dHRvbnMsXFxuLmNhcmQ6aG92ZXIgLm1vZGlmeS1idXR0b25ze1xcbiAgICBkaXNwbGF5OiBibG9jaztcXG59XFxuXFxuLm1vZGlmeS1idXR0b25zIHtcXG4gICAgZGlzcGxheTogbm9uZTtcXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XFxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcXG59XFxuXFxuLm1vZGlmeS1idXR0b25zIGk6aG92ZXIge1xcbiBjb2xvcjogdmFyKC0tcGluaylcXG59XFxuXFxuLmFkZC1pY29uIHtcXG4gICAgd2lkdGg6IDMwcHg7XFxuICAgIGhlaWdodDogMzBweDtcXG4gICAgY29sb3I6IHZhcigtLW1haW4tZGFyayk7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXBpbmspO1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xcbn1cXG5cXG4uYWRkLXRhc2sgLmJ0bntcXG4gICAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi5hZGQtdGFzayB7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XFxufVxcblxcbi5jaGVja2JveCB7XFxuICAgIHdpZHRoOiAxOHB4O1xcbiAgICBoZWlnaHQ6IDE4cHg7XFxuICAgIGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLXBpbmspO1xcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcXG59XFxuXFxuLmNoZWNrYm94OmhvdmVyIHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4uY2hlY2tlZCB7XFxuICAgIGNvbG9yOiB2YXIoLS1tYWluLWRhcmspO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1waW5rKTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5wb3BvdXQtYnRucyB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGdhcDogMjBweDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxufVxcblxcbi5wb3BvdXQtYnRucyBidXR0b24ge1xcbiAgICB3aWR0aDogMTAwcHg7XFxuICAgIGhlaWdodDogMzBweDtcXG4gICAgcGFkZGluZzogNXB4O1xcbn1cXG5cXG4ucHJvamVjdEZvcm0ge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuXFxuLnByb2plY3QtaW5wdXQsIC50YXNrLWlucHV0IHtcXG4gICAgaGVpZ2h0OiAzNXB4O1xcbiAgICBwYWRkaW5nOiA1cHg7XFxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG59XFxuXFxuLnRhc2tGb3JtIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIHBhZGRpbmc6IDE1cHg7XFxufVxcblxcbi50YXNrLWlucHV0IHtcXG4gICAgd2lkdGg6IDEwMCU7XFxufVxcblxcbi5mYS1jaGVjayB7XFxuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbn1cXG5cXG4vKiBGT1JNIC8gUE9QT1VUIFRBU0sgREVUQUlMUyAqL1xcbi5kZXRhaWxzRm9ybSB7XFxuICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XFxuICAgIGNvbG9yOiBibGFjaztcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBwYWRkaW5nOiAxNXB4O1xcbiAgICBtaW4td2lkdGg6IDUwMHB4O1xcbiAgICB0b3A6IDUwJTtcXG4gICAgbGVmdDogNTAlO1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG4gICAgYm9yZGVyLXJhZGl1czogMTVweDtcXG59XFxuXFxuLmZvcm0tY29udHJvbCB7XFxuICAgIG1hcmdpbi10b3A6IDE1cHg7XFxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XFxufVxcblxcbnRleHRhcmVhIHtcXG4gICAgcGFkZGluZzogMTBweDtcXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xcbiAgICBsaW5lLWhlaWdodDogMS41O1xcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XFxuICAgIGJveC1zaGFkb3c6IDFweCAxcHggMXB4ICM5OTk7XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSx5QkFBeUI7SUFDekIsb0JBQW9CO0lBQ3BCLGVBQWU7SUFDZiwwQkFBMEI7SUFDMUIsK0JBQStCO0lBQy9CLDZCQUE2QjtJQUM3QixpQkFBaUI7SUFDakIsdUJBQXVCO0FBQzNCO0FBQ0E7SUFDSSxVQUFVO0lBQ1YsU0FBUztJQUNULHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixhQUFhO0lBQ2IsaUJBQWlCO0lBQ2pCLGtDQUFrQztBQUN0Qzs7QUFFQSxvQkFBb0I7O0FBRXBCO0lBQ0ksdUNBQXVDO0lBQ3ZDLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1o7QUFDSjs7QUFFQTtLQUNLLFlBQVk7SUFDYixrQ0FBa0M7QUFDdEM7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsYUFBYTtJQUNiLDhCQUE4QjtBQUNsQzs7QUFFQTtJQUNJLGVBQWU7SUFDZixxQ0FBcUM7QUFDekM7O0FBRUE7SUFDSSxvQkFBb0I7QUFDeEI7O0FBRUE7SUFDSSwrQkFBK0I7QUFDbkM7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsYUFBYTtBQUNqQjs7QUFFQSxVQUFVO0FBQ1Y7SUFDSSxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSw2QkFBNkI7SUFDN0IsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIsV0FBVztJQUNYLGlCQUFpQjtJQUNqQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0kscUNBQXFDO0lBQ3JDLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsdUNBQXVDO0lBQ3ZDLG1CQUFtQjtJQUNuQixtQkFBbUI7SUFDbkIsYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixrQ0FBa0M7QUFDdEM7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0k7QUFDSjs7QUFFQTtJQUNJLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLDZCQUE2QjtJQUM3QiwyQkFBMkI7SUFDM0IsZ0NBQWdDO0FBQ3BDOztBQUVBLHlCQUF5Qjs7QUFFekI7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLHVDQUF1QztJQUN2QyxhQUFhO0lBQ2Isa0NBQWtDO0lBQ2xDLDZCQUE2QjtJQUM3QixlQUFlO0lBQ2YsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0kscUNBQXFDO0FBQ3pDOztBQUVBOztJQUVJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsaUJBQWlCO0lBQ2pCLGtCQUFrQjtBQUN0Qjs7QUFFQTtDQUNDO0FBQ0Q7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLHVCQUF1QjtJQUN2Qiw2QkFBNkI7SUFDN0IsbUJBQW1CO0lBQ25CLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFVBQVU7SUFDVixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLDZCQUE2QjtJQUM3QixrQkFBa0I7SUFDbEIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLHVCQUF1QjtJQUN2Qiw2QkFBNkI7SUFDN0IsYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsU0FBUztJQUNULHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixZQUFZO0lBQ1osWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksV0FBVztJQUNYLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxvQkFBb0I7QUFDeEI7O0FBRUEsK0JBQStCO0FBQy9CO0lBQ0ksbUJBQW1CO0lBQ25CLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixRQUFRO0lBQ1IsU0FBUztJQUNULGdDQUFnQztJQUNoQyxzQkFBc0I7SUFDdEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixzQkFBc0I7SUFDdEIsNEJBQTRCO0FBQ2hDXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIjpyb290IHtcXG4gICAgLS1zZWNvbmRhcnktZGFyazogIzIxMjEyYjtcXG4gICAgLS1tYWluLWRhcms6ICMxODE4MjA7XFxuICAgIC0tcGluazogI2ZjNzZhMTtcXG4gICAgLS1tYWluLXRleHQtY29sb3I6ICNkNWQ1ZDc7XFxuICAgIC0tc2Vjb25kYXJ5LXRleHQtY29sb3I6ICNhN2E3YWI7XFxuICAgIC0tcHJvamVjdC10ZXh0LWNvbG9yOiAjZTJlMmUzO1xcbiAgICAtLWFjdGl2ZTogIzM4Mzg0NjtcXG4gICAgLS1hY3RpdmUtaG92ZXI6ICMyNzI3MzI7XFxufVxcbioge1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBtYXJnaW46IDA7XFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbi5tYWluIHtcXG4gICAgZm9udC1zaXplOiAxOHB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbWFpbi1kYXJrKTtcXG59XFxuXFxuLyogUFJPSkVDVCBTSURFQkFSICovXFxuXFxuLnNpZGViYXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1zZWNvbmRhcnktZGFyayk7XFxuICAgIG1pbi13aWR0aDogMjUwcHg7XFxuICAgIHdpZHRoOiAzNTBweDtcXG4gICAgY29sb3I6IHZhcigtLXByb2plY3QtdGV4dC1jb2xvcilcXG59XFxuXFxuLnNpZGViYXIgaDIge1xcbiAgICAgbWFyZ2luOiAyNXB4O1xcbiAgICBjb2xvcjogdmFyKC0tc2Vjb25kYXJ5LXRleHQtY29sb3IpO1xcbn1cXG5cXG4ucHJvamVjdCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIHBhZGRpbmc6IDI1cHg7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG59XFxuXFxuLnByb2plY3Q6aG92ZXIge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFjdGl2ZS1ob3Zlcik7XFxufVxcblxcbi5wcm9qZWN0LWluZm8ge1xcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcXG59XFxuXFxuLmFjdGl2ZSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFjdGl2ZSk7XFxufVxcblxcbi5zaWRlYmFyIC5wcm9qZWN0LXRpdGxlIHtcXG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XFxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcXG59XFxuXFxuLmFkZC1wcm9qZWN0IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgcGFkZGluZzogMjVweDtcXG59XFxuXFxuLyogVEFTS1MgKi9cXG4uY29udGFpbmVyIHtcXG4gICAgd2lkdGg6IDUwJTtcXG59XFxuXFxuLnRhc2tzIHtcXG4gICAgY29sb3I6IHZhcigtLW1haW4tdGV4dC1jb2xvcik7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBtYXJnaW4tdG9wOiAxMDBweDtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG5cXG4udGFza3MtY29udGFpbmVyIHtcXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcXG59XFxuXFxuLnRhc2tzIC5wcm9qZWN0LXRpdGxlIHtcXG4gICAgY29sb3I6ICNmZmY7XFxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XFxufVxcblxcbi5jb3VudGVyIHtcXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcXG59XFxuXFxuLnRhc2tzLWNvbnRhaW5lciAuY2FyZDpob3ZlciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFjdGl2ZS1ob3Zlcik7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG59ICAgXFxuXFxuLmNhcmQge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1zZWNvbmRhcnktZGFyayk7XFxuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XFxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XFxuICAgIHBhZGRpbmc6IDE1cHg7XFxufVxcblxcbi50YXNrLWRldGFpbHMge1xcbiAgICBmb250LXNpemU6IC45cmVtO1xcbiAgICBjb2xvcjogdmFyKC0tc2Vjb25kYXJ5LXRleHQtY29sb3IpO1xcbn1cXG5cXG4ucHJpb3JpdHkgPiAubm9uZSB7XFxuICAgIGRpc3BsYXk6ICBub25lO1xcbn1cXG5cXG4ucHJpb3JpdHkgPiAubG93IHtcXG4gICAgY29sb3I6IHJnYigzMSwgMTk0LCAzMSk7XFxufVxcblxcbi5wcmlvcml0eSA+IC5tZWRpdW0ge1xcbiAgICBjb2xvcjogeWVsbG93XFxufVxcblxcbi5wcmlvcml0eSA+IC5oaWdoIHtcXG4gICAgY29sb3I6IHJnYigyNTUsIDc1LCA3NSk7XFxufVxcblxcbi5jb21wbGV0ZWQge1xcbiAgICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcXG4gICAgdGV4dC1kZWNvcmF0aW9uLWNvbG9yOiAjZmZmO1xcbiAgICB0ZXh0LWRlY29yYXRpb24tdGhpY2tuZXNzOiAxLjVweDtcXG59XFxuXFxuLyogRk9STSBCVVRUT05TL0NPTlRST0wgKi9cXG5cXG4uYnRuIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgYm9yZGVyOiAycHggc29saWQgdmFyKC0tc2Vjb25kYXJ5LWRhcmspO1xcbiAgICBwYWRkaW5nOiAxNXB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1tYWluLWRhcmspO1xcbiAgICBjb2xvcjogdmFyKC0tbWFpbi10ZXh0LWNvbG9yKTtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbn1cXG5cXG4uYnRuOmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWN0aXZlLWhvdmVyKTtcXG59XFxuXFxuLnByb2plY3Q6aG92ZXIgLm1vZGlmeS1idXR0b25zLFxcbi5jYXJkOmhvdmVyIC5tb2RpZnktYnV0dG9uc3tcXG4gICAgZGlzcGxheTogYmxvY2s7XFxufVxcblxcbi5tb2RpZnktYnV0dG9ucyB7XFxuICAgIGRpc3BsYXk6IG5vbmU7XFxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XFxufVxcblxcbi5tb2RpZnktYnV0dG9ucyBpOmhvdmVyIHtcXG4gY29sb3I6IHZhcigtLXBpbmspXFxufVxcblxcbi5hZGQtaWNvbiB7XFxuICAgIHdpZHRoOiAzMHB4O1xcbiAgICBoZWlnaHQ6IDMwcHg7XFxuICAgIGNvbG9yOiB2YXIoLS1tYWluLWRhcmspO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1waW5rKTtcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcXG59XFxuXFxuLmFkZC10YXNrIC5idG57XFxuICAgIHdpZHRoOiAxMDAlO1xcbn1cXG5cXG4uYWRkLXRhc2sge1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xcbn1cXG5cXG4uY2hlY2tib3gge1xcbiAgICB3aWR0aDogMThweDtcXG4gICAgaGVpZ2h0OiAxOHB4O1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCB2YXIoLS1waW5rKTtcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XFxufVxcblxcbi5jaGVja2JveDpob3ZlciB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLmNoZWNrZWQge1xcbiAgICBjb2xvcjogdmFyKC0tbWFpbi1kYXJrKTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcGluayk7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4ucG9wb3V0LWJ0bnMge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBnYXA6IDIwcHg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbn1cXG5cXG4ucG9wb3V0LWJ0bnMgYnV0dG9uIHtcXG4gICAgd2lkdGg6IDEwMHB4O1xcbiAgICBoZWlnaHQ6IDMwcHg7XFxuICAgIHBhZGRpbmc6IDVweDtcXG59XFxuXFxuLnByb2plY3RGb3JtIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxufVxcblxcbi5wcm9qZWN0LWlucHV0LCAudGFzay1pbnB1dCB7XFxuICAgIGhlaWdodDogMzVweDtcXG4gICAgcGFkZGluZzogNXB4O1xcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxufVxcblxcbi50YXNrRm9ybSB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBwYWRkaW5nOiAxNXB4O1xcbn1cXG5cXG4udGFzay1pbnB1dCB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbn1cXG5cXG4uZmEtY2hlY2sge1xcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcXG59XFxuXFxuLyogRk9STSAvIFBPUE9VVCBUQVNLIERFVEFJTFMgKi9cXG4uZGV0YWlsc0Zvcm0ge1xcbiAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xcbiAgICBjb2xvcjogYmxhY2s7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgcGFkZGluZzogMTVweDtcXG4gICAgbWluLXdpZHRoOiA1MDBweDtcXG4gICAgdG9wOiA1MCU7XFxuICAgIGxlZnQ6IDUwJTtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XFxuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XFxufVxcblxcbi5mb3JtLWNvbnRyb2wge1xcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xcbn1cXG5cXG50ZXh0YXJlYSB7XFxuICAgIHBhZGRpbmc6IDEwcHg7XFxuICAgIG1heC13aWR0aDogMTAwJTtcXG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xcbiAgICBib3gtc2hhZG93OiAxcHggMXB4IDFweCAjOTk5O1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcblxuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG5cbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG5cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG5cbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG5cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cblxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG5cbiAgY3NzICs9IG9iai5jc3M7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImNsYXNzIFByb2plY3Qge1xuICAgIGNvbnN0cnVjdG9yKHRpdGxlKXtcbiAgICAgICAgdGhpcy50aXRsZSA9IHRpdGxlXG4gICAgICAgIHRoaXMudGFza3MgPSBbXVxuICAgICAgICBQcm9qZWN0LmFsbFByb2plY3RzLnB1c2godGhpcylcbiAgICB9XG5cbiAgICBzdGF0aWMgYWxsUHJvamVjdHMgPSBbXVxuXG4gICAgc3RhdGljIGNvbnRhaW5zUHJvamVjdChwcm9qZWN0VGl0bGUpe1xuICAgICAgICByZXR1cm4gUHJvamVjdC5hbGxQcm9qZWN0cy5zb21lKHByb2plY3QgPT4gcHJvamVjdC50aXRsZSA9PT0gcHJvamVjdFRpdGxlKVxuICAgIH1cbiAgICBzdGF0aWMgZ2V0UHJvamVjdChwcm9qZWN0VGl0bGUpe1xuICAgICAgICByZXR1cm4gUHJvamVjdC5hbGxQcm9qZWN0cy5maW5kKHByb2plY3QgPT4gcHJvamVjdC50aXRsZSA9PT0gcHJvamVjdFRpdGxlKVxuICAgIH1cblxuICAgIHN0YXRpYyByZW1vdmVQcm9qZWN0KHByb2plY3RUaXRsZSl7XG4gICAgICAgIFByb2plY3QuYWxsUHJvamVjdHMgPSBQcm9qZWN0LmFsbFByb2plY3RzLmZpbHRlcihwcm9qZWN0ID0+IHByb2plY3QudGl0bGUgIT09IHByb2plY3RUaXRsZSlcbiAgICB9XG5cbiAgICBzdGF0aWMgc2V0QWxsUHJvamVjdHMocHJvamVjdHMpe1xuICAgICAgICBQcm9qZWN0LmFsbFByb2plY3RzID0gcHJvamVjdHNcbiAgICB9XG4gICAgXG4gICAgc2V0VGFza3ModGFza3Mpe1xuICAgICAgICB0aGlzLnRhc2tzID0gdGFza3NcbiAgICB9XG5cbiAgICBnZXQgdG9kb0xlbmd0aCgpe1xuICAgICAgICByZXR1cm4gdGhpcy50YXNrcy5maWx0ZXIodGFzayA9PiAhdGFzay5jb21wbGV0ZWQpLmxlbmd0aFxuICAgIH1cblxuICAgIGdldCBjb21wbGV0ZWRMZW5ndGgoKXtcbiAgICAgICAgcmV0dXJuIHRoaXMudGFza3MuZmlsdGVyKHRhc2sgPT4gdGFzay5jb21wbGV0ZWQpLmxlbmd0aFxuICAgIH1cblxuICAgIGdldCB0b2RvVGFza3MoKXtcbiAgICAgICAgcmV0dXJuIHRoaXMudGFza3MuZmlsdGVyKHRhc2sgPT4gIXRhc2suY29tcGxldGVkKVxuICAgIH1cblxuICAgIGdldCBjb21wbGV0ZWRUYXNrcygpe1xuICAgICAgICByZXR1cm4gdGhpcy50YXNrcy5maWx0ZXIodGFzayA9PiB0YXNrLmNvbXBsZXRlZClcbiAgICB9XG5cbiAgIGdldFRhc2sodGFza0lEKXtcbiAgICAgICAgY29uc3QgdGFzayA9IHRoaXMudGFza3MuZmluZCgoe2lkfSkgPT4gaWQgPT09IHRhc2tJRClcbiAgICAgICAgcmV0dXJuIHRhc2tcbiAgICB9XG5cbiAgICBzZXRUYXNrKHRhc2spe1xuICAgICAgICB0aGlzLnRhc2tzLnB1c2godGFzaylcbiAgICB9XG5cbiAgICByZW1vdmVUYXNrKHRhc2tJRCl7XG4gICAgICAgIHRoaXMudGFza3MgPSB0aGlzLnRhc2tzLmZpbHRlcih0YXNrID0+IHRhc2suaWQgIT0gdGFza0lEKVxuICAgIH1cbn1cblxuZXhwb3J0IHsgUHJvamVjdCB9IiwibGV0IHRhc2tJRCA9IDBcblxuY2xhc3MgVGFzayB7XG4gICAgY29uc3RydWN0b3IodGl0bGUpe1xuICAgICAgICB0aGlzLnRpdGxlID0gdGl0bGVcbiAgICAgICAgdGhpcy5jb21wbGV0ZWQgPSBmYWxzZVxuICAgICAgICB0aGlzLmlkID0gdGFza0lEKytcbiAgICAgICAgdGhpcy5wcmlvcml0eSA9ICdub25lJ1xuICAgICAgICB0aGlzLm5vdGVzID0gJydcbiAgICB9XG5cbiAgICBzZXRUaXRsZSh2YWx1ZSl7XG4gICAgICAgICB0aGlzLnRpdGxlID0gdmFsdWVcbiAgICB9XG5cbiAgICBzZXREdWVEYXRlKGRhdGUpe1xuICAgICAgICB0aGlzLmR1ZURhdGUgPSBkYXRlXG4gICAgfVxuXG4gICAgc2V0UHJpb3JpdHkodmFsdWUpe1xuICAgICAgICB0aGlzLnByaW9yaXR5ID0gdmFsdWVcbiAgICB9XG5cbiAgICBzZXROb3Rlcyh2YWx1ZSl7XG4gICAgICAgIHRoaXMubm90ZXMgPSB2YWx1ZVxuICAgIH1cblxuICAgIHRvZ2dsZUNvbXBsZXRpb24oKXtcbiAgICAgICAgdGhpcy5jb21wbGV0ZWQgPyB0aGlzLmNvbXBsZXRlZCA9IGZhbHNlIDogdGhpcy5jb21wbGV0ZWQgPSB0cnVlXG4gICAgfVxufVxuXG5leHBvcnQgeyBUYXNrIH0iLCJpbXBvcnQgeyBQcm9qZWN0IH0gZnJvbSAnLi9wcm9qZWN0J1xuaW1wb3J0IHsgZm9ybWF0IH0gZnJvbSAnZGF0ZS1mbnMnXG5pbXBvcnQgeyBUYXNrIH0gZnJvbSAnLi90YXNrJ1xuXG5cbmNvbnN0IERPTSA9ICgoKSA9PiB7XG4gICAgY29uc3QgcHJvamVjdENvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9qZWN0LWNvbnRhaW5lcicpXG4gICAgY29uc3QgYWRkUHJvamVjdENvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGQtcHJvamVjdCcpXG4gICAgY29uc3QgYWRkUHJvamVjdEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhZGQtcHJvamVjdCcpXG4gICAgY29uc3QgdGFza1NlY3Rpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGFza3MnKVxuICAgIGNvbnN0IHRhc2tzQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRhc2tzLWNvbnRhaW5lcicpXG4gICAgY29uc3QgYWRkVGFza0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGQtdGFzaycpXG4gICAgY29uc3QgYWRkVGFza0J0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhZGQtdGFzaycpXG4gICAgY29uc3QgY29tcGxldGVkQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbXBsZXRlZC10YXNrcycpXG5cblxuICAgIGZ1bmN0aW9uIGluaXRMaXN0ZW5lcnMoKXtcbiAgICAgICAgcHJvamVjdENvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGxvYWRQcm9qZWN0RXZlbnQpXG4gICAgICAgIGFkZFByb2plY3RCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7cmVuZGVyTmV3Rm9ybSgncHJvamVjdCcpfSlcbiAgICAgICAgdGFza3NDb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBsb2FkVGFza0V2ZW50KVxuICAgICAgICBjb21wbGV0ZWRDb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBsb2FkVGFza0V2ZW50KVxuICAgICAgICBhZGRUYXNrQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge3JlbmRlck5ld0Zvcm0oJ3Rhc2snKX0pXG4gICAgfVxuXG4gICAgLy8gUFJPSkVDVCBGVU5DVElPTlNcblxuICAgIGZ1bmN0aW9uIGxvYWRQcm9qZWN0RXZlbnQoZSl7XG4gICAgICAgIGlmIChlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ2ZhLXhtYXJrJykpe1xuICAgICAgICAgICAgZGVsZXRlUHJvamVjdChlLnRhcmdldC5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzZXRBY3RpdmVQcm9qZWN0KGUudGFyZ2V0KVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVuZGVyUHJvamVjdChwcm9qZWN0KXtcbiAgICAgICAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICAgICAgZGl2LmNsYXNzTGlzdC5hZGQoJ3Byb2plY3QnKVxuICAgICAgICBkaXYuZGF0YXNldC5wcm9qZWN0VGl0bGUgPSBwcm9qZWN0LnRpdGxlXG4gICAgICAgIHByb2plY3RDb250YWluZXIuYXBwZW5kKGRpdilcblxuICAgICAgICBjb25zdCBwcm9qZWN0SW5mbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgICAgIHByb2plY3RJbmZvLmNsYXNzTGlzdC5hZGQoJ3Byb2plY3QtaW5mbycpXG4gICAgICAgIGRpdi5hcHBlbmQocHJvamVjdEluZm8pXG5cbiAgICAgICAgY29uc3QgaWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2knKVxuICAgICAgICBpY29uLmNsYXNzTGlzdC5hZGQoJ2ZhLXNvbGlkJywgJ2ZhLWJvb2stb3BlbicpXG4gICAgICAgIHByb2plY3RJbmZvLmFwcGVuZChpY29uKVxuXG4gICAgICAgIGNvbnN0IHNwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJylcbiAgICAgICAgc3Bhbi5jbGFzc0xpc3QuYWRkKCdwcm9qZWN0LXRpdGxlJylcbiAgICAgICAgc3Bhbi50ZXh0Q29udGVudCA9IGNhcGl0YWxpemVTdHJpbmcocHJvamVjdC50aXRsZSlcbiAgICAgICAgcHJvamVjdEluZm8uYXBwZW5kKHNwYW4pXG5cbiAgICAgICAgZGl2LmFwcGVuZChyZW5kZXJNb2RpZnlCdXR0b25zKCkpXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc2V0QWN0aXZlUHJvamVjdChub2RlKXtcbiAgICAgICAgY29uc3Qgb2xkQWN0aXZlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFjdGl2ZScpXG4gICAgICAgIGlmIChvbGRBY3RpdmUpe1xuICAgICAgICAgICAgb2xkQWN0aXZlLmNsYXNzTGlzdC50b2dnbGUoJ2FjdGl2ZScpXG4gICAgICAgIH1cblxuICAgICAgICBub2RlLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpXG4gICAgICAgIGNsZWFyVGFza3MoKVxuICAgICAgICBsZXQgcHJvamVjdCA9IFByb2plY3QuZ2V0UHJvamVjdChub2RlLmRhdGFzZXQucHJvamVjdFRpdGxlKVxuICAgICAgICByZW5kZXJQcm9qZWN0c1Rhc2socHJvamVjdClcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjcmVhdGVOZXdQcm9qZWN0KHByb2plY3QsIGUpe1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KClcblxuICAgICAgICBpZiAoIXByb2plY3Qpe1xuICAgICAgICAgICAgYWxlcnQoJ1BsZWFzZSBlbnRlciBhIG5hbWUgZm9yIHlvdXIgcHJvamVjdCcpXG4gICAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgfSBlbHNlIGlmIChQcm9qZWN0LmNvbnRhaW5zUHJvamVjdChwcm9qZWN0KSl7XG4gICAgICAgICAgICBhbGVydCgnTmFtZSBpcyBhbHJlYWR5IGluIHVzZScpXG4gICAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IG5ld1Byb2plY3QgPSBuZXcgUHJvamVjdChwcm9qZWN0KVxuICAgICAgICByZW5kZXJQcm9qZWN0KG5ld1Byb2plY3QpXG4gICAgICAgIHJlbW92ZUFkZEZvcm0oJ3Byb2plY3QnKVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGRlbGV0ZVByb2plY3Qobm9kZSl7XG4gICAgICAgIGNvbnN0IHByb2plY3QgPSBQcm9qZWN0LmdldFByb2plY3Qobm9kZS5kYXRhc2V0LnByb2plY3RUaXRsZSlcbiAgICAgICAgUHJvamVjdC5yZW1vdmVQcm9qZWN0KHByb2plY3QudGl0bGUpXG4gICAgICAgIG5vZGUucmVtb3ZlKClcbiAgICAgICAgc2V0QWN0aXZlUHJvamVjdChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvamVjdCcpKVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJlbmRlclByb2plY3RMaXN0KCl7XG4gICAgICAgIGNvbnN0IHByb2plY3RzID0gUHJvamVjdC5hbGxQcm9qZWN0c1xuXG4gICAgICAgIGZvciAoY29uc3QgcHJvamVjdCBvZiBwcm9qZWN0cyl7XG4gICAgICAgICAgICByZW5kZXJQcm9qZWN0KHByb2plY3QpXG4gICAgICAgIH0gXG4gICAgICAgIFxuICAgICAgICBzZXRBY3RpdmVQcm9qZWN0KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9qZWN0JykpXG4gICAgfVxuXG4gICAgLy8gVEFTSyBGVU5DVElPTlNcblxuICAgIGZ1bmN0aW9uIGxvYWRUYXNrRXZlbnQoZSl7XG4gICAgICAgIGlmIChlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ2NoZWNrYm94Jykpe1xuICAgICAgICAgICAgdG9nZ2xlVGFza0NvbXBsZXRpb24oZS50YXJnZXQpXG4gICAgICAgIH0gZWxzZSBpZiAoZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdmYS14bWFyaycpKXtcbiAgICAgICAgICAgIGRlbGV0ZVRhc2soZS50YXJnZXQpXG4gICAgICAgIH0gZWxzZSBpZiAoZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdjYXJkJykpIHtcbiAgICAgICAgICAgIGNvbnN0IHRhc2tJRCA9IE51bWJlcihlLnRhcmdldC5kYXRhc2V0LnRhc2tJZClcbiAgICAgICAgICAgIHJlbmRlclRhc2tEZXRhaWxzRm9ybSh0YXNrSUQpXG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICB0YXNrRGV0YWlsTGlzdGVuZXJzKGUudGFyZ2V0LCB0YXNrSUQpXG4gICAgICAgICAgICAgIH0sIDApXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiByZW5kZXJUYXNrKHRhc2spe1xuICAgICAgICBjb25zdCBjYXJkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICAgICAgY2FyZC5kYXRhc2V0LnRhc2tJZCA9IHRhc2suaWRcbiAgICAgICAgY2FyZC5jbGFzc0xpc3QuYWRkKCdjYXJkJylcblxuICAgICAgICBjb25zdCBjaGVja2JveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgICAgIGNoZWNrYm94LmNsYXNzTGlzdC5hZGQoJ2NoZWNrYm94JylcbiAgICAgICAgY2FyZC5hcHBlbmQoY2hlY2tib3gpXG5cbiAgICAgICAgY29uc3QgdGFza0luZm8gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgICAgICB0YXNrSW5mby5jbGFzc0xpc3QuYWRkKCd0YXNrLWluZm8nKVxuICAgICAgICBjYXJkLmFwcGVuZCh0YXNrSW5mbylcblxuICAgICAgICBjb25zdCB0YXNrVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJylcbiAgICAgICAgdGFza1RpdGxlLmNsYXNzTGlzdC5hZGQoJ3Rhc2stdGl0bGUnKVxuICAgICAgICB0YXNrVGl0bGUudGV4dENvbnRlbnQgPSB0YXNrLnRpdGxlXG4gICAgICAgIHRhc2tJbmZvLmFwcGVuZCh0YXNrVGl0bGUpXG5cbiAgICAgICAgaWYgKHRhc2suY29tcGxldGVkKXtcbiAgICAgICAgICAgIGNoZWNrYm94LmNsYXNzTGlzdC5hZGQoJ2NoZWNrZWQnKVxuICAgICAgICAgICAgdGFza1RpdGxlLmNsYXNzTGlzdC5hZGQoJ2NvbXBsZXRlZCcpXG5cbiAgICAgICAgICAgIGNvbnN0IGljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpJylcbiAgICAgICAgICAgIGljb24uY2xhc3NMaXN0LmFkZCgnZmEtc29saWQnLCAnZmEtY2hlY2snKVxuICAgICAgICAgICAgY2hlY2tib3guYXBwZW5kKGljb24pXG4gICAgICAgIH1cblxuICAgICAgICB0YXNrSW5mby5hcHBlbmQocmVuZGVyVGFza0RldGFpbHModGFzaykpXG4gICAgICAgIGNhcmQuYXBwZW5kKHJlbmRlck1vZGlmeUJ1dHRvbnMoKSlcblxuICAgICAgICByZXR1cm4gY2FyZFxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNyZWF0ZU5ld1Rhc2sodGFzaywgZSl7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgIFxuICAgICAgICBpZiAoIXRhc2spe1xuICAgICAgICAgICAgYWxlcnQoJ1BsZWFzZSBlbnRlciBhIG5hbWUgZm9yIHlvdXIgdGFzaycpXG4gICAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IG5ld1Rhc2sgPSBuZXcgVGFzayh0YXNrKVxuICAgICAgICB1cGRhdGVQcm9qZWN0c1Rhc2sobmV3VGFzaylcbiAgICAgICAgdXBkYXRlVG90YWxUb2RvVGFza3NMZW5ndGgoKVxuICAgICAgICB0YXNrc0NvbnRhaW5lci5wcmVwZW5kKHJlbmRlclRhc2sobmV3VGFzaykpXG4gICAgICAgIHJlbW92ZUFkZEZvcm0oJ3Rhc2snKVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHVwZGF0ZVByb2plY3RzVGFzayh0YXNrKXtcbiAgICAgICAgY29uc3QgcHJvamVjdFRpdGxlID0gZ2V0UHJvamVjdFRpdGxlKClcbiAgICAgICAgY29uc3QgcHJvamVjdCA9IFByb2plY3QuZ2V0UHJvamVjdChwcm9qZWN0VGl0bGUpXG4gICAgICAgIHByb2plY3Quc2V0VGFzayh0YXNrKVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJlbmRlclByb2plY3RzVGFzayhwcm9qZWN0KXtcbiAgICAgICAgY29uc3QgdGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdoMS5wcm9qZWN0LXRpdGxlJylcbiAgICAgICAgdGl0bGUudGV4dENvbnRlbnQgPSBjYXBpdGFsaXplU3RyaW5nKHByb2plY3QudGl0bGUpXG5cbiAgICAgICAgdXBkYXRlVG90YWxUb2RvVGFza3NMZW5ndGgoKVxuICAgICAgICB1cGRhdGVDb21wbGV0ZWRUYXNrc0xlbmd0aCgpXG4gICAgICAgIHJlbmRlclVuY29tcGxldGVkVGFza3MocHJvamVjdClcbiAgICAgICAgcmVuZGVyQ29tcGxldGVkVGFza3MocHJvamVjdClcbiAgICB9XG5cbiAgICBmdW5jdGlvbiByZW5kZXJVbmNvbXBsZXRlZFRhc2tzKHByb2plY3Qpe1xuICAgICAgICBjb25zdCB0YXNrcyA9IHByb2plY3QudG9kb1Rhc2tzXG5cbiAgICAgICAgZm9yIChjb25zdCB0YXNrIG9mIHRhc2tzKXtcbiAgICAgICAgICAgIHRhc2tzQ29udGFpbmVyLmFwcGVuZChyZW5kZXJUYXNrKHRhc2spKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVuZGVyQ29tcGxldGVkVGFza3MocHJvamVjdCl7XG4gICAgICAgIGNvbnN0IHRhc2tzID0gcHJvamVjdC5jb21wbGV0ZWRUYXNrc1xuXG4gICAgICAgIGZvciAoY29uc3QgdGFzayBvZiB0YXNrcyl7XG4gICAgICAgICAgICBjb21wbGV0ZWRDb250YWluZXIuYXBwZW5kKHJlbmRlclRhc2sodGFzaykpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiByZW5kZXJUYXNrRGV0YWlscyh0YXNrKXtcbiAgICAgICAgY29uc3QgdGFza0RldGFpbHMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgICAgICB0YXNrRGV0YWlscy5jbGFzc0xpc3QuYWRkKCd0YXNrLWRldGFpbHMnKVxuXG4gICAgICAgIHRhc2tEZXRhaWxzLmFwcGVuZChyZW5kZXJUYXNrRHVlRGF0ZSh0YXNrKSlcbiAgICAgICAgdGFza0RldGFpbHMuYXBwZW5kKHJlbmRlclRhc2tQcmlvcml0eSh0YXNrKSlcblxuICAgICAgICByZXR1cm4gdGFza0RldGFpbHNcbiAgICB9XG5cbiAgICBmdW5jdGlvbiByZW5kZXJUYXNrRHVlRGF0ZSh0YXNrKXtcbiAgICAgICAgY29uc3QgZHVlRGF0ZURpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgICAgIGR1ZURhdGVEaXYuY2xhc3NMaXN0LmFkZCgnZHVlLWRhdGUnKVxuXG4gICAgICAgIGlmICh0YXNrLmR1ZURhdGUpe1xuICAgICAgICAgICAgY29uc3QgaWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2knKVxuICAgICAgICAgICAgaWNvbi5jbGFzc0xpc3QuYWRkKCdmYS1zb2xpZCcsICdmYS1jYWxlbmRhcicpXG4gICAgICAgICAgICBkdWVEYXRlRGl2LmFwcGVuZChpY29uKVxuXG4gICAgICAgICAgICBjb25zdCBkYXkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJylcbiAgICAgICAgICAgIGRheS5jbGFzc0xpc3QuYWRkKCdkYXknKVxuICAgICAgICAgICAgZGF5LnRleHRDb250ZW50ID0gJ2R1ZSBzb29uJ1xuICAgICAgICAgICAgZHVlRGF0ZURpdi5hcHBlbmQoZGF5KVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGR1ZURhdGVEaXZcbiAgICB9XG5cbiAgICBmdW5jdGlvbiByZW5kZXJUYXNrUHJpb3JpdHkodGFzayl7XG4gICAgICAgIGNvbnN0IHByaW9yaXR5RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICAgICAgcHJpb3JpdHlEaXYuY2xhc3NMaXN0LmFkZCgncHJpb3JpdHknKVxuXG4gICAgICAgIGNvbnN0IGljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpJylcbiAgICAgICAgaWNvbi5jbGFzc0xpc3QuYWRkKCdmYS1zb2xpZCcsICdmYS10cmlhbmdsZS1leGNsYW1hdGlvbicsIGAke3Rhc2sucHJpb3JpdHl9YClcbiAgICAgICAgcHJpb3JpdHlEaXYuYXBwZW5kKGljb24pXG4gICAgXG4gICAgICAgIHJldHVybiBwcmlvcml0eURpdlxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHVwZGF0ZVRvdGFsVG9kb1Rhc2tzTGVuZ3RoKCl7XG4gICAgICAgIGNvbnN0IHByb2plY3RUaXRsZSA9IGdldFByb2plY3RUaXRsZSgpXG4gICAgICAgIGNvbnN0IHByb2plY3QgPSBQcm9qZWN0LmdldFByb2plY3QocHJvamVjdFRpdGxlKVxuICAgICAgICBjb25zdCB0b3RhbFRhc2tzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRvdGFsLXRhc2tzJylcbiAgICAgICAgdG90YWxUYXNrcy50ZXh0Q29udGVudCA9IHByb2plY3QudG9kb0xlbmd0aFxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHVwZGF0ZUNvbXBsZXRlZFRhc2tzTGVuZ3RoKCl7XG4gICAgICAgIGNvbnN0IHByb2plY3RUaXRsZSA9IGdldFByb2plY3RUaXRsZSgpXG4gICAgICAgIGNvbnN0IHByb2plY3QgPSBQcm9qZWN0LmdldFByb2plY3QocHJvamVjdFRpdGxlKVxuICAgICAgICBjb25zdCBjb21wbGV0ZWRUYXNrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50b3RhbC1jb21wbGV0ZWQtdGFza3MnKVxuICAgICAgICBjb21wbGV0ZWRUYXNrcy50ZXh0Q29udGVudCA9IHByb2plY3QuY29tcGxldGVkTGVuZ3RoXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdG9nZ2xlVGFza0NvbXBsZXRpb24obm9kZSl7XG4gICAgICAgIGNvbnN0IHByb2plY3QgPSBQcm9qZWN0LmdldFByb2plY3QoZ2V0UHJvamVjdFRpdGxlKCkpXG4gICAgICAgIGNvbnN0IHRhc2tDYXJkID0gbm9kZS5wYXJlbnRFbGVtZW50XG4gICAgICAgIGNvbnN0IHRhc2sgPSBwcm9qZWN0LmdldFRhc2soTnVtYmVyKHRhc2tDYXJkLmRhdGFzZXQudGFza0lkKSlcblxuICAgICAgICB0YXNrQ2FyZC5yZW1vdmUoKVxuICAgICAgICB0YXNrLnRvZ2dsZUNvbXBsZXRpb24oKVxuICAgICAgICB1cGRhdGVDaGVja2JveCh0YXNrLCBub2RlKVxuICAgICAgICB1cGRhdGVUb3RhbFRvZG9UYXNrc0xlbmd0aCgpXG4gICAgICAgIHVwZGF0ZUNvbXBsZXRlZFRhc2tzTGVuZ3RoKClcblxuICAgICAgICBpZiAodGFzay5jb21wbGV0ZWQpe1xuICAgICAgICAgICAgY29tcGxldGVkQ29udGFpbmVyLnByZXBlbmQocmVuZGVyVGFzayh0YXNrKSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRhc2tzQ29udGFpbmVyLnByZXBlbmQocmVuZGVyVGFzayh0YXNrKSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHVwZGF0ZUNoZWNrYm94KHRhc2ssIG5vZGUpe1xuICAgICAgICBub2RlLmNsYXNzTGlzdC50b2dnbGUoJ2NoZWNrZWQnKVxuICAgICAgICBpZiAodGFzay5jb21wbGV0ZWQpe1xuICAgICAgICAgICAgY29uc3QgaWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2knKVxuICAgICAgICAgICAgaWNvbi5jbGFzc0xpc3QuYWRkKCdmYS1zb2xpZCcsICdmYS1jaGVjaycpXG4gICAgICAgICAgICBub2RlLmFwcGVuZChpY29uKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZGVsZXRlVGFzayhub2RlKXtcbiAgICAgICAgY29uc3QgcHJvamVjdCA9IFByb2plY3QuZ2V0UHJvamVjdChnZXRQcm9qZWN0VGl0bGUoKSlcbiAgICAgICAgY29uc3QgdGFza0NhcmQgPSBub2RlLnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudFxuICAgICAgICBjb25zdCB0YXNrSUQgPSBOdW1iZXIodGFza0NhcmQuZGF0YXNldC50YXNrSWQpXG4gICAgICAgIGNvbnN0IHRhc2sgPSBwcm9qZWN0LmdldFRhc2sodGFza0lEKVxuXG4gICAgICAgIHByb2plY3QucmVtb3ZlVGFzayh0YXNrSUQpXG4gICAgICAgIHRhc2tDYXJkLnJlbW92ZSgpXG5cbiAgICAgICAgdGFzay5jb21wbGV0ZWQgPyB1cGRhdGVDb21wbGV0ZWRUYXNrc0xlbmd0aCgpIDogdXBkYXRlVG90YWxUb2RvVGFza3NMZW5ndGgoKVxuICAgIH1cblxuICAgIC8vIEZPUk1cblxuICAgIGZ1bmN0aW9uIHJlbmRlck5ld0Zvcm0odHlwZSl7XG4gICAgICAgIGNvbnN0IGZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb3JtJylcbiAgICAgICAgZm9ybS5jbGFzc0xpc3QuYWRkKGAke3R5cGV9Rm9ybWApXG5cbiAgICAgICAgY29uc3QgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpXG4gICAgICAgIGlucHV0LnR5cGUgPSAndGV4dCdcbiAgICAgICAgaW5wdXQucGxhY2Vob2xkZXIgPSBgRW50ZXIgJHt0eXBlfWBcbiAgICAgICAgaW5wdXQuY2xhc3NMaXN0LmFkZChgJHt0eXBlfS1pbnB1dGApXG4gICAgICAgIGZvcm0uYXBwZW5kKGlucHV0KVxuXG4gICAgICAgIGNvbnN0IGJ0bkNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgICAgIGJ0bkNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKGBwb3BvdXQtYnRuc2ApXG4gICAgICAgIGZvcm0uYXBwZW5kKGJ0bkNvbnRhaW5lcilcblxuICAgICAgICBjb25zdCBhZGRCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKVxuICAgICAgICBhZGRCdG4udGV4dENvbnRlbnQgPSAnQWRkJ1xuICAgICAgICBidG5Db250YWluZXIuYXBwZW5kKGFkZEJ0bilcblxuICAgICAgICBjb25zdCBjYW5jZWxCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKVxuICAgICAgICBjYW5jZWxCdG4udGV4dENvbnRlbnQgPSAnQ2FuY2VsJ1xuICAgICAgICBidG5Db250YWluZXIuYXBwZW5kKGNhbmNlbEJ0bilcblxuICAgICAgICBpZiAodHlwZSA9PT0gJ3Rhc2snKXtcbiAgICAgICAgICAgIGFkZFRhc2tCdG4uc3R5bGUuZGlzcGxheSA9ICdub25lJ1xuICAgICAgICAgICAgYWRkVGFza0NvbnRhaW5lci5hcHBlbmQoZm9ybSlcbiAgICAgICAgICAgIGFkZEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7IGNyZWF0ZU5ld1Rhc2soaW5wdXQudmFsdWUsIGUpfSlcbiAgICAgICAgICAgIGNhbmNlbEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtyZW1vdmVBZGRGb3JtKCd0YXNrJyl9KVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYWRkUHJvamVjdEJ0bi5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnXG4gICAgICAgICAgICBhZGRQcm9qZWN0Q29udGFpbmVyLmFwcGVuZChmb3JtKVxuICAgICAgICAgICAgYWRkQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHsgY3JlYXRlTmV3UHJvamVjdChpbnB1dC52YWx1ZSwgZSl9KVxuICAgICAgICAgICAgY2FuY2VsQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge3JlbW92ZUFkZEZvcm0oJ3Byb2plY3QnKX0pXG4gICAgICAgIH1cblxuICAgICAgICBpbnB1dC5mb2N1cygpXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVuZGVyTW9kaWZ5QnV0dG9ucygpIHtcbiAgICAgICAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICAgICAgZGl2LmNsYXNzTGlzdC5hZGQoJ21vZGlmeS1idXR0b25zJylcblxuICAgICAgICBjb25zdCBkZWxldGVJY29uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaScpXG4gICAgICAgIGRlbGV0ZUljb24uY2xhc3NMaXN0LmFkZCgnZmEtc29saWQnLCAnZmEteG1hcmsnKVxuICAgICAgICBkaXYuYXBwZW5kKGRlbGV0ZUljb24pXG4gICAgICAgIHJldHVybiBkaXZcbiAgICB9XG5cbiAgICBmdW5jdGlvbiByZW1vdmVBZGRGb3JtKHR5cGUpe1xuICAgICAgICBjb25zdCBmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLiR7dHlwZX1Gb3JtYClcbiAgICAgICAgZm9ybS5yZW1vdmUoKVxuXG4gICAgICAgIHR5cGUgPT09ICdwcm9qZWN0JyA/IGFkZFByb2plY3RCdG4uc3R5bGUuZGlzcGxheSA9ICdmbGV4JyA6IGFkZFRhc2tCdG4uc3R5bGUuZGlzcGxheSA9ICdmbGV4J1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJlbmRlclRhc2tEZXRhaWxzRm9ybSh0YXNrSUQpe1xuICAgICAgICBjb25zdCBwcm9qZWN0ID0gUHJvamVjdC5nZXRQcm9qZWN0KGdldFByb2plY3RUaXRsZSgpKVxuICAgICAgICBjb25zdCB0YXNrID0gcHJvamVjdC5nZXRUYXNrKHRhc2tJRClcblxuICAgICAgICBjb25zdCBmb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZm9ybScpXG4gICAgICAgIGZvcm0uY2xhc3NMaXN0LmFkZCgnZGV0YWlsc0Zvcm0nKVxuICAgICAgICB0YXNrU2VjdGlvbi5hcHBlbmQoZm9ybSlcblxuICAgICAgICBjb25zdCBsZWdlbmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsZWdlbmQnKVxuICAgICAgICBsZWdlbmQudGV4dENvbnRlbnQgPSAnVGFzayBEZXRhaWxzJ1xuICAgICAgICBmb3JtLmFwcGVuZChsZWdlbmQpXG5cbiAgICAgICAgY29uc3QgdGl0bGVDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgICAgICB0aXRsZUNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdmb3JtLWNvbnRyb2wnKVxuICAgICAgICBmb3JtLmFwcGVuZCh0aXRsZUNvbnRhaW5lcilcbiAgICAgICAgY29uc3QgdGl0bGVMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJylcbiAgICAgICAgdGl0bGVMYWJlbC5odG1sRm9yID0gJ3RpdGxlJ1xuICAgICAgICB0aXRsZUxhYmVsLnRleHRDb250ZW50ID0gJ1Rhc2s6ICdcbiAgICAgICAgdGl0bGVDb250YWluZXIuYXBwZW5kKHRpdGxlTGFiZWwpXG4gICAgICAgIGNvbnN0IHRpdGxlSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpXG4gICAgICAgIHRpdGxlSW5wdXQudHlwZSA9ICd0ZXh0J1xuICAgICAgICB0aXRsZUlucHV0LmlkID0gJ3RpdGxlJ1xuICAgICAgICB0aXRsZUlucHV0LnZhbHVlID0gdGFzay50aXRsZVxuICAgICAgICB0aXRsZUNvbnRhaW5lci5hcHBlbmQodGl0bGVJbnB1dClcblxuICAgICAgICBjb25zdCBkdWVEYXRlQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICAgICAgZHVlRGF0ZUNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdmb3JtLWNvbnRyb2wnKVxuICAgICAgICBmb3JtLmFwcGVuZChkdWVEYXRlQ29udGFpbmVyKVxuICAgICAgICBjb25zdCBkdWVEYXRlTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpXG4gICAgICAgIGR1ZURhdGVMYWJlbC5odG1sRm9yID0gJ2RhdGUnXG4gICAgICAgIGR1ZURhdGVMYWJlbC50ZXh0Q29udGVudCA9ICdEdWUgRGF0ZTogJ1xuICAgICAgICBkdWVEYXRlQ29udGFpbmVyLmFwcGVuZChkdWVEYXRlTGFiZWwpXG4gICAgICAgIGNvbnN0IGR1ZURhdGVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0JylcbiAgICAgICAgZHVlRGF0ZUlucHV0LnR5cGUgPSAnZGF0ZSdcbiAgICAgICAgZHVlRGF0ZUlucHV0LmlkID0gJ2RhdGUnXG4gICAgICAgIC8vIGR1ZURhdGVJbnB1dC52YWx1ZSA9IFlZWVktTU0tRERcbiAgICAgICAgZHVlRGF0ZUNvbnRhaW5lci5hcHBlbmQoZHVlRGF0ZUlucHV0KVxuXG4gICAgICAgIGNvbnN0IHByaW9yaXR5Q29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICAgICAgcHJpb3JpdHlDb250YWluZXIuY2xhc3NMaXN0LmFkZCgnZm9ybS1jb250cm9sJylcbiAgICAgICAgZm9ybS5hcHBlbmQocHJpb3JpdHlDb250YWluZXIpXG4gICAgICAgIGNvbnN0IHByaW9yaXR5TGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpXG4gICAgICAgIHByaW9yaXR5TGFiZWwuaHRtbEZvciA9ICdwcmlvcml0eSdcbiAgICAgICAgcHJpb3JpdHlMYWJlbC50ZXh0Q29udGVudCA9ICdQcmlvcml0eTogJ1xuICAgICAgICBwcmlvcml0eUNvbnRhaW5lci5hcHBlbmQocHJpb3JpdHlMYWJlbClcbiAgICAgICAgY29uc3QgcHJpb3JpdHlTZWxlY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzZWxlY3QnKVxuICAgICAgICBwcmlvcml0eVNlbGVjdC5pZCA9ICdwcmlvcml0eSdcbiAgICAgICAgcmVuZGVyUHJpb3JpdHlPcHRpb25zKHRhc2ssIHByaW9yaXR5U2VsZWN0KVxuICAgICAgICBwcmlvcml0eUNvbnRhaW5lci5hcHBlbmQocHJpb3JpdHlTZWxlY3QpXG5cbiAgICAgICAgY29uc3Qgbm90ZXNDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgICAgICBub3Rlc0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdmb3JtLWNvbnRyb2wnKVxuICAgICAgICBmb3JtLmFwcGVuZChub3Rlc0NvbnRhaW5lcilcbiAgICAgICAgY29uc3Qgbm90ZXNMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJylcbiAgICAgICAgbm90ZXNMYWJlbC5odG1sRm9yID0gJ25vdGVzJ1xuICAgICAgICBub3Rlc0xhYmVsLnRleHRDb250ZW50ID0gJ05vdGVzOiAnXG4gICAgICAgIG5vdGVzQ29udGFpbmVyLmFwcGVuZChub3Rlc0xhYmVsKVxuICAgICAgICBjb25zdCBub3RlcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RleHRhcmVhJylcbiAgICAgICAgbm90ZXMuY29scyA9IDUwXG4gICAgICAgIG5vdGVzLnJvd3MgPSAxMFxuICAgICAgICBub3Rlcy5pZCA9ICdub3RlcydcbiAgICAgICAgbm90ZXMudmFsdWUgPSB0YXNrLm5vdGVzXG4gICAgICAgIG5vdGVzQ29udGFpbmVyLmFwcGVuZChub3RlcylcblxuICAgICAgICAvL3ByZXZlbnQgdXNlciBmcm9tIHN1Ym1pdHRpbmcgZm9ybSBvbiAnZW50ZXInXG4gICAgICAgIGNvbnN0IGRpc2FibGVkQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKVxuICAgICAgICBkaXNhYmxlZEJ0bi50eXBlID0gJ3N1Ym1pdCdcbiAgICAgICAgZGlzYWJsZWRCdG4uZGlzYWJsZWQgPSB0cnVlXG4gICAgICAgIGRpc2FibGVkQnRuLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSdcbiAgICAgICAgZGlzYWJsZWRCdG4uYXJpYUhpZGRlbiA9ICd0cnVlJ1xuICAgICAgICBmb3JtLmFwcGVuZChkaXNhYmxlZEJ0bilcbiAgICB9XG4gICAgXG4gICAgZnVuY3Rpb24gcmVuZGVyUHJpb3JpdHlPcHRpb25zKHRhc2ssIHByaW9yaXR5U2VsZWN0KXtcbiAgICAgICAgY29uc3QgcHJpb3JpdGllcyA9IFsnTm9uZScsICdMb3cnLCAnTWVkaXVtJywgJ0hpZ2gnXVxuXG4gICAgICAgIGZvciAoY29uc3QgcHJpb3JpdHkgb2YgcHJpb3JpdGllcyl7XG4gICAgICAgICAgICBjb25zdCBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKVxuICAgICAgICAgICAgb3B0aW9uLnZhbHVlID0gcHJpb3JpdHkudG9Mb3dlckNhc2UoKVxuICAgICAgICAgICAgb3B0aW9uLnRleHRDb250ZW50ID0gcHJpb3JpdHlcbiAgICAgICAgICAgIGlmIChwcmlvcml0eS50b0xvd2VyQ2FzZSgpID09PSB0YXNrLnByaW9yaXR5KXtcbiAgICAgICAgICAgICAgICBvcHRpb24uc2VsZWN0ZWQgPSB0cnVlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwcmlvcml0eVNlbGVjdC5hcHBlbmQob3B0aW9uKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdGFza0RldGFpbExpc3RlbmVycyhub2RlLCB0YXNrSUQpIHtcbiAgICAgICAgY29uc3QgZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5kZXRhaWxzRm9ybScpXG4gICAgICAgIGNvbnN0IHByb2plY3QgPSBQcm9qZWN0LmdldFByb2plY3QoZ2V0UHJvamVjdFRpdGxlKCkpXG4gICAgICAgIGNvbnN0IHRhc2sgPSBwcm9qZWN0LmdldFRhc2sodGFza0lEKVxuXG4gICAgICAgIGZvcm0uZWxlbWVudHMudGl0bGUuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IHt1cGRhdGVUYXNrVGl0bGUodGFzaywgbm9kZSwgZS50YXJnZXQudmFsdWUpfSlcbiAgICAgICAgZm9ybS5lbGVtZW50cy5kYXRlLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7dXBkYXRlVGFza0R1ZURhdGUodGFzaywgbm9kZSwgZS50YXJnZXQudmFsdWUpfSlcbiAgICAgICAgZm9ybS5lbGVtZW50cy5wcmlvcml0eS5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoZSkgPT4ge3VwZGF0ZVRhc2tQcmlvcml0eSh0YXNrLCBub2RlLCBlLnRhcmdldC52YWx1ZSl9KVxuICAgICAgICBmb3JtLmVsZW1lbnRzLm5vdGVzLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7dXBkYXRlVGFza05vdGVzKHRhc2ssIGUudGFyZ2V0LnZhbHVlKX0pXG5cbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGNsb3NlRGV0YWlsc0Zvcm0pXG4gICAgICAgICAgfSwgMClcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjbG9zZURldGFpbHNGb3JtKGUpe1xuICAgICAgICBjb25zdCBmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmRldGFpbHNGb3JtJylcbiAgICAgICAgaWYgKCFmb3JtLmNvbnRhaW5zKGUudGFyZ2V0KSl7XG4gICAgICAgICAgICBmb3JtLnJlbW92ZSgpXG4gICAgICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIGNsb3NlRGV0YWlsc0Zvcm0pXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiB1cGRhdGVUYXNrVGl0bGUodGFzaywgbm9kZSwgbmV3VGl0bGUpe1xuICAgICAgICB0YXNrLnNldFRpdGxlKG5ld1RpdGxlKVxuICAgICAgICBub2RlLnF1ZXJ5U2VsZWN0b3IoJy50YXNrLXRpdGxlJykudGV4dENvbnRlbnQgPSBuZXdUaXRsZVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHVwZGF0ZVRhc2tEdWVEYXRlKHRhc2ssIG5ld0RhdGUpe1xuICAgICAgICAvLyBjb25zdCB0YXNrSW5mbyA9IG5vZGUucXVlcnlTZWxlY3RvcignLnRhc2staW5mbycpXG4gICAgICAgIC8vIHRhc2suc2V0RHVlRGF0ZShuZXdEYXRlKVxuICAgICAgICAvLyB0YXNrSW5mby5hcHBlbmQocmVuZGVyVGFza0RldGFpbHModGFzaykpXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdXBkYXRlVGFza1ByaW9yaXR5KHRhc2ssIG5vZGUsIG5ld1ByaW9yaXR5KXsgICAgICAgIFxuICAgICAgICBjb25zdCBpY29uID0gbm9kZS5xdWVyeVNlbGVjdG9yKCcuZmEtdHJpYW5nbGUtZXhjbGFtYXRpb24nKVxuICAgICAgICBpY29uLmNsYXNzTGlzdC5yZW1vdmUodGFzay5wcmlvcml0eSlcbiAgICAgICAgdGFzay5zZXRQcmlvcml0eShuZXdQcmlvcml0eSlcbiAgICAgICAgaWNvbi5jbGFzc0xpc3QuYWRkKHRhc2sucHJpb3JpdHkpXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdXBkYXRlVGFza05vdGVzKHRhc2ssIG5ld05vdGVzKXtcbiAgICAgICAgY29uc29sZS5sb2codGFzay5ub3RlcylcbiAgICAgICAgdGFzay5zZXROb3RlcyhuZXdOb3RlcylcbiAgICAgICAgY29uc29sZS5sb2codGFzay5ub3RlcylcbiAgICB9XG5cbiAgICAvLyBIRUxQRVIgRlVOQ1RJT05TXG4gICAgZnVuY3Rpb24gY2xlYXJUYXNrcygpe1xuICAgICAgICB0YXNrc0NvbnRhaW5lci5pbm5lckhUTUwgPSAnJ1xuICAgICAgICBjb21wbGV0ZWRDb250YWluZXIuaW5uZXJIVE1MID0gJydcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjYXBpdGFsaXplU3RyaW5nKHN0cmluZyl7XG4gICAgICAgIGxldCBzdHJpbmdBcnIgPSBzdHJpbmcuc3BsaXQoJyAnKVxuICAgICAgICByZXR1cm4gc3RyaW5nQXJyLm1hcCh3b3JkID0+IHdvcmRbMF0udG9VcHBlckNhc2UoKSArIHdvcmQuc2xpY2UoMSkpLmpvaW4oJyAnKVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldFByb2plY3RUaXRsZSgpe1xuICAgICAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaDEucHJvamVjdC10aXRsZScpLnRleHRDb250ZW50LnRvTG93ZXJDYXNlKClcbiAgICB9XG5cblxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgaW5pdExpc3RlbmVyc1xuICAgIH1cbn0pKClcblxuZXhwb3J0IHsgRE9NIH1cbiIsImltcG9ydCAnLi9zdHlsZS5jc3MnXG5pbXBvcnQgeyBET00gfSBmcm9tICcuL21vZHVsZXMvZG9tJ1xuXG5cbkRPTS5pbml0TGlzdGVuZXJzKCkiXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290Iiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIm5jIiwiUHJvamVjdCIsImNvbnN0cnVjdG9yIiwidGl0bGUiLCJ0YXNrcyIsImFsbFByb2plY3RzIiwic3RhdGljIiwicHJvamVjdFRpdGxlIiwic29tZSIsInByb2plY3QiLCJmaW5kIiwiZmlsdGVyIiwicHJvamVjdHMiLCJzZXRUYXNrcyIsInRvZG9MZW5ndGgiLCJ0YXNrIiwiY29tcGxldGVkIiwiY29tcGxldGVkTGVuZ3RoIiwidG9kb1Rhc2tzIiwiY29tcGxldGVkVGFza3MiLCJnZXRUYXNrIiwidGFza0lEIiwic2V0VGFzayIsInJlbW92ZVRhc2siLCJUYXNrIiwicHJpb3JpdHkiLCJub3RlcyIsInNldFRpdGxlIiwidmFsdWUiLCJzZXREdWVEYXRlIiwiZGF0ZSIsImR1ZURhdGUiLCJzZXRQcmlvcml0eSIsInNldE5vdGVzIiwidG9nZ2xlQ29tcGxldGlvbiIsIkRPTSIsInByb2plY3RDb250YWluZXIiLCJhZGRQcm9qZWN0Q29udGFpbmVyIiwiYWRkUHJvamVjdEJ0biIsInRhc2tTZWN0aW9uIiwidGFza3NDb250YWluZXIiLCJhZGRUYXNrQ29udGFpbmVyIiwiYWRkVGFza0J0biIsImNvbXBsZXRlZENvbnRhaW5lciIsImxvYWRQcm9qZWN0RXZlbnQiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsIm5vZGUiLCJnZXRQcm9qZWN0IiwiZGF0YXNldCIsInJlbW92ZVByb2plY3QiLCJzZXRBY3RpdmVQcm9qZWN0IiwiZGVsZXRlUHJvamVjdCIsInBhcmVudEVsZW1lbnQiLCJvbGRBY3RpdmUiLCJ0b2dnbGUiLCJhZGQiLCJpbm5lckhUTUwiLCJ0ZXh0Q29udGVudCIsImNhcGl0YWxpemVTdHJpbmciLCJ1cGRhdGVUb3RhbFRvZG9UYXNrc0xlbmd0aCIsInVwZGF0ZUNvbXBsZXRlZFRhc2tzTGVuZ3RoIiwiYXBwZW5kIiwicmVuZGVyVGFzayIsInJlbmRlclVuY29tcGxldGVkVGFza3MiLCJyZW5kZXJDb21wbGV0ZWRUYXNrcyIsImxvYWRUYXNrRXZlbnQiLCJnZXRQcm9qZWN0VGl0bGUiLCJ0YXNrQ2FyZCIsIk51bWJlciIsInRhc2tJZCIsImljb24iLCJ1cGRhdGVDaGVja2JveCIsInByZXBlbmQiLCJ0b2dnbGVUYXNrQ29tcGxldGlvbiIsImRlbGV0ZVRhc2siLCJmb3JtIiwibGVnZW5kIiwidGl0bGVDb250YWluZXIiLCJ0aXRsZUxhYmVsIiwiaHRtbEZvciIsInRpdGxlSW5wdXQiLCJ0eXBlIiwiZHVlRGF0ZUNvbnRhaW5lciIsImR1ZURhdGVMYWJlbCIsImR1ZURhdGVJbnB1dCIsInByaW9yaXR5Q29udGFpbmVyIiwicHJpb3JpdHlMYWJlbCIsInByaW9yaXR5U2VsZWN0IiwicHJpb3JpdGllcyIsIm9wdGlvbiIsInRvTG93ZXJDYXNlIiwic2VsZWN0ZWQiLCJyZW5kZXJQcmlvcml0eU9wdGlvbnMiLCJub3Rlc0NvbnRhaW5lciIsIm5vdGVzTGFiZWwiLCJjb2xzIiwicm93cyIsImRpc2FibGVkQnRuIiwiZGlzYWJsZWQiLCJkaXNwbGF5IiwiYXJpYUhpZGRlbiIsInJlbmRlclRhc2tEZXRhaWxzRm9ybSIsInNldFRpbWVvdXQiLCJlbGVtZW50cyIsImFkZEV2ZW50TGlzdGVuZXIiLCJuZXdUaXRsZSIsInVwZGF0ZVRhc2tUaXRsZSIsIm5ld1ByaW9yaXR5IiwidXBkYXRlVGFza1ByaW9yaXR5IiwibmV3Tm90ZXMiLCJjb25zb2xlIiwibG9nIiwidXBkYXRlVGFza05vdGVzIiwiY2xvc2VEZXRhaWxzRm9ybSIsInRhc2tEZXRhaWxMaXN0ZW5lcnMiLCJjYXJkIiwiY2hlY2tib3giLCJ0YXNrSW5mbyIsInRhc2tUaXRsZSIsInRhc2tEZXRhaWxzIiwiZHVlRGF0ZURpdiIsImRheSIsInJlbmRlclRhc2tEdWVEYXRlIiwicHJpb3JpdHlEaXYiLCJyZW5kZXJUYXNrUHJpb3JpdHkiLCJyZW5kZXJUYXNrRGV0YWlscyIsInJlbmRlck1vZGlmeUJ1dHRvbnMiLCJyZW5kZXJOZXdGb3JtIiwiaW5wdXQiLCJwbGFjZWhvbGRlciIsImJ0bkNvbnRhaW5lciIsImFkZEJ0biIsImNhbmNlbEJ0biIsInByZXZlbnREZWZhdWx0IiwiYWxlcnQiLCJuZXdUYXNrIiwidXBkYXRlUHJvamVjdHNUYXNrIiwicmVtb3ZlQWRkRm9ybSIsImNyZWF0ZU5ld1Rhc2siLCJjb250YWluc1Byb2plY3QiLCJkaXYiLCJwcm9qZWN0SW5mbyIsInNwYW4iLCJyZW5kZXJQcm9qZWN0IiwiY3JlYXRlTmV3UHJvamVjdCIsImZvY3VzIiwiZGVsZXRlSWNvbiIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJzdHJpbmciLCJzcGxpdCIsIndvcmQiLCJ0b1VwcGVyQ2FzZSIsInNsaWNlIiwiaW5pdExpc3RlbmVycyJdLCJzb3VyY2VSb290IjoiIn0=