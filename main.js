(()=>{"use strict";var n={426:(n,t,e)=>{e.d(t,{Z:()=>i});var o=e(537),r=e.n(o),a=e(645),c=e.n(a)()(r());c.push([n.id,":root {\n    --secondary-dark: #21212b;\n    --main-dark: #181820;\n    --pink: #fc76a1;\n    --main-text-color: #d5d5d7;\n    --secondary-text-color: #a7a7ab;\n    --project-text-color: #e2e2e3;\n    --active: #383846;\n    --active-hover: #272732;\n}\n* {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n\n.main {\n    font-size: 18px;\n    display: flex;\n    height: 100vh;\n    background-color: var(--main-dark);\n}\n\n.sidebar {\n    background-color: var(--secondary-dark);\n    min-width: 250px;\n    width: 300px;\n    color: var(--project-text-color)\n}\n\n.sidebar h2 {\n     margin: 25px;\n    color: var(--secondary-text-color);\n}\n\n.project {\n    display: flex;\n    padding: 25px;\n    justify-content: space-between;\n}\n\n.project:hover {\n    cursor: pointer;\n    background-color: var(--active-hover);\n}\n\n.project-info {\n    pointer-events: none;\n}\n\n.active {\n    background-color: var(--active);\n}\n\n.sidebar .project-title {\n    margin-left: 10px;\n    margin-right: 10px;\n    font-weight: 700;\n}\n\n.add-project {\n    display: flex;\n    flex-direction: column;\n    padding: 25px;\n}\n\n.btn {\n    display: flex;\n    align-items: center;\n    border: 2px solid var(--secondary-dark);\n    padding: 15px;\n    background-color: var(--main-dark);\n    color: var(--main-text-color);\n    cursor: pointer;\n    border-radius: 10px;\n}\n\n.btn:hover {\n    background-color: var(--active-hover);\n}\n\n.project:hover .project-buttons{\n    display: block;\n}\n\n.project-buttons {\n    display: none;\n    align-self: flex-end;\n}\n\n.project-buttons i:hover {\n color: var(--pink)\n}\n\n.add-icon {\n    width: 30px;\n    height: 30px;\n    color: var(--main-dark);\n    background-color: var(--pink);\n    border-radius: 10px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-right: 10px;\n}\n\n.tasks {\n    color: var(--main-text-color);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    margin-top: 100px;\n}\n\n.container {\n    width: 60%;\n}\n\n.tasks .project-title {\n    color: #fff;\n    margin-bottom: 30px;\n}\n\n.tasks-container {\n    margin-bottom: 30px;\n}\n\n.counter {\n    margin-bottom: 15px;\n}\n\n.tasks-container .card:hover {\n    background-color: var(--active-hover);\n    cursor: pointer;\n}   \n\n\n.card {\n    display: flex;\n    background-color: var(--secondary-dark);\n    border-radius: 15px;\n    margin-bottom: 10px;\n    padding: 15px;\n}\n\n.add-task  .btn{\n    width: 100%;\n}\n\n.add-task {\n    padding: 0;\n    margin-bottom: 30px;\n}\n\n.checkbox {\n    width: 18px;\n    height: 18px;\n    border: 2px solid var(--pink);\n    border-radius: 5px;\n    margin-right: 10px;\n}\n\n.checkbox:hover {\n    cursor: pointer;\n}\n\n.checked {\n    color: var(--main-dark);\n    background-color: var(--pink);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.completed {\n    text-decoration: line-through;\n    text-decoration-color: #fff;\n    text-decoration-thickness: 1.5px;\n}\n\n.task-details {\n    font-size: .9rem;\n    color: var(--secondary-text-color);\n}\n\n.projectForm {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.project-input {\n    height: 35px;\n    padding: 5px;\n    margin-bottom: 10px;\n}\n\n.popout-project-btns {\n    display: flex;\n    gap: 20px;\n    justify-content: center;\n}\n\n.popout-project-btns button {\n    width: 60px;\n    height: 30px;\n    padding: 5px;\n}\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,yBAAyB;IACzB,oBAAoB;IACpB,eAAe;IACf,0BAA0B;IAC1B,+BAA+B;IAC/B,6BAA6B;IAC7B,iBAAiB;IACjB,uBAAuB;AAC3B;AACA;IACI,UAAU;IACV,SAAS;IACT,sBAAsB;AAC1B;;AAEA;IACI,eAAe;IACf,aAAa;IACb,aAAa;IACb,kCAAkC;AACtC;;AAEA;IACI,uCAAuC;IACvC,gBAAgB;IAChB,YAAY;IACZ;AACJ;;AAEA;KACK,YAAY;IACb,kCAAkC;AACtC;;AAEA;IACI,aAAa;IACb,aAAa;IACb,8BAA8B;AAClC;;AAEA;IACI,eAAe;IACf,qCAAqC;AACzC;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,+BAA+B;AACnC;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,uCAAuC;IACvC,aAAa;IACb,kCAAkC;IAClC,6BAA6B;IAC7B,eAAe;IACf,mBAAmB;AACvB;;AAEA;IACI,qCAAqC;AACzC;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,oBAAoB;AACxB;;AAEA;CACC;AACD;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,uBAAuB;IACvB,6BAA6B;IAC7B,mBAAmB;IACnB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,6BAA6B;IAC7B,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,WAAW;IACX,iBAAiB;AACrB;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,WAAW;IACX,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,qCAAqC;IACrC,eAAe;AACnB;;;AAGA;IACI,aAAa;IACb,uCAAuC;IACvC,mBAAmB;IACnB,mBAAmB;IACnB,aAAa;AACjB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,UAAU;IACV,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,6BAA6B;IAC7B,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,uBAAuB;IACvB,6BAA6B;IAC7B,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,6BAA6B;IAC7B,2BAA2B;IAC3B,gCAAgC;AACpC;;AAEA;IACI,gBAAgB;IAChB,kCAAkC;AACtC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;AAC3B;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,uBAAuB;AAC3B;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,YAAY;AAChB",sourcesContent:[":root {\n    --secondary-dark: #21212b;\n    --main-dark: #181820;\n    --pink: #fc76a1;\n    --main-text-color: #d5d5d7;\n    --secondary-text-color: #a7a7ab;\n    --project-text-color: #e2e2e3;\n    --active: #383846;\n    --active-hover: #272732;\n}\n* {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n\n.main {\n    font-size: 18px;\n    display: flex;\n    height: 100vh;\n    background-color: var(--main-dark);\n}\n\n.sidebar {\n    background-color: var(--secondary-dark);\n    min-width: 250px;\n    width: 300px;\n    color: var(--project-text-color)\n}\n\n.sidebar h2 {\n     margin: 25px;\n    color: var(--secondary-text-color);\n}\n\n.project {\n    display: flex;\n    padding: 25px;\n    justify-content: space-between;\n}\n\n.project:hover {\n    cursor: pointer;\n    background-color: var(--active-hover);\n}\n\n.project-info {\n    pointer-events: none;\n}\n\n.active {\n    background-color: var(--active);\n}\n\n.sidebar .project-title {\n    margin-left: 10px;\n    margin-right: 10px;\n    font-weight: 700;\n}\n\n.add-project {\n    display: flex;\n    flex-direction: column;\n    padding: 25px;\n}\n\n.btn {\n    display: flex;\n    align-items: center;\n    border: 2px solid var(--secondary-dark);\n    padding: 15px;\n    background-color: var(--main-dark);\n    color: var(--main-text-color);\n    cursor: pointer;\n    border-radius: 10px;\n}\n\n.btn:hover {\n    background-color: var(--active-hover);\n}\n\n.project:hover .project-buttons{\n    display: block;\n}\n\n.project-buttons {\n    display: none;\n    align-self: flex-end;\n}\n\n.project-buttons i:hover {\n color: var(--pink)\n}\n\n.add-icon {\n    width: 30px;\n    height: 30px;\n    color: var(--main-dark);\n    background-color: var(--pink);\n    border-radius: 10px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-right: 10px;\n}\n\n.tasks {\n    color: var(--main-text-color);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    margin-top: 100px;\n}\n\n.container {\n    width: 60%;\n}\n\n.tasks .project-title {\n    color: #fff;\n    margin-bottom: 30px;\n}\n\n.tasks-container {\n    margin-bottom: 30px;\n}\n\n.counter {\n    margin-bottom: 15px;\n}\n\n.tasks-container .card:hover {\n    background-color: var(--active-hover);\n    cursor: pointer;\n}   \n\n\n.card {\n    display: flex;\n    background-color: var(--secondary-dark);\n    border-radius: 15px;\n    margin-bottom: 10px;\n    padding: 15px;\n}\n\n.add-task  .btn{\n    width: 100%;\n}\n\n.add-task {\n    padding: 0;\n    margin-bottom: 30px;\n}\n\n.checkbox {\n    width: 18px;\n    height: 18px;\n    border: 2px solid var(--pink);\n    border-radius: 5px;\n    margin-right: 10px;\n}\n\n.checkbox:hover {\n    cursor: pointer;\n}\n\n.checked {\n    color: var(--main-dark);\n    background-color: var(--pink);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.completed {\n    text-decoration: line-through;\n    text-decoration-color: #fff;\n    text-decoration-thickness: 1.5px;\n}\n\n.task-details {\n    font-size: .9rem;\n    color: var(--secondary-text-color);\n}\n\n.projectForm {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n}\n\n.project-input {\n    height: 35px;\n    padding: 5px;\n    margin-bottom: 10px;\n}\n\n.popout-project-btns {\n    display: flex;\n    gap: 20px;\n    justify-content: center;\n}\n\n.popout-project-btns button {\n    width: 60px;\n    height: 30px;\n    padding: 5px;\n}\n\n"],sourceRoot:""}]);const i=c},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var c={};if(o)for(var i=0;i<this.length;i++){var A=this[i][0];null!=A&&(c[A]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);o&&c[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),e&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=e):d[2]=e),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),t.push(d))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),c=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[t].concat(c).concat([a]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var a={},c=[],i=0;i<n.length;i++){var A=n[i],s=o.base?A[0]+o.base:A[0],d=a[s]||0,l="".concat(s," ").concat(d);a[s]=d+1;var p=e(l),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var m=r(u,o);o.byIndex=i,t.splice(i,0,{identifier:l,updater:m,references:1})}c.push(l)}return c}function r(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var c=0;c<a.length;c++){var i=e(a[c]);t[i].references--}for(var A=o(n,r),s=0;s<a.length;s++){var d=e(a[s]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}a=A}}},569:n=>{var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,r&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return n[o](a,a.exports,e),a.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),e.nc=void 0,(()=>{var n=e(379),t=e.n(n),o=e(795),r=e.n(o),a=e(569),c=e.n(a),i=e(565),A=e.n(i),s=e(216),d=e.n(s),l=e(589),p=e.n(l),u=e(426),m={};m.styleTagTransform=p(),m.setAttributes=A(),m.insert=c().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=d(),t()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;class C{constructor(n){this.title=n,this.tasks=[],C.allProjects.push(this)}static allProjects=[];static containsProject(n){return C.allProjects.some((t=>t.title===n))}static getProject(n){return C.allProjects.find((t=>t.title===n))}static removeProject(n){C.allProjects=C.allProjects.filter((t=>t.title!==n))}static setAllProjects(n){C.allProjects=n}setTasks(n){this.tasks=n}get todoLength(){return this.tasks.filter((n=>!n.completed)).length}get completedLength(){return this.tasks.filter((n=>n.completed)).length}get todoTasks(){return this.tasks.filter((n=>!n.completed))}get completedTasks(){return this.tasks.filter((n=>n.completed))}getTask(n){return this.tasks.find((t=>t.name===n.name&&t.dateCreated===n.dateCreated))}setTask(n){this.tasks.push(n)}removeTask(n){this.tasks=this.tasks.filter((t=>t.name!=n.name&&t.dateCreated!=n.dateCreated))}setNewTitle(n){this.title=n}}(()=>{const n=document.querySelector(".project-container"),t=document.querySelector(".add-project"),e=document.querySelector("#add-project"),o=document.querySelector(".tasks-container"),r=document.querySelector(".completed-tasks");function a(n){n.target.classList.contains("fa-xmark")?function(n){console.log(C.allProjects);const t=C.getProject(n.dataset.projectTitle);C.removeProject(t.title),n.remove(),console.log(C.allProjects)}(n.target.parentElement.parentElement):function(n){const t=document.querySelector(".active");t&&t.classList.toggle("active"),n.classList.add("active"),o.innerHTML="",r.innerHTML="";let e=C.getProject(n.dataset.projectTitle);console.log(e),function(n){document.querySelector("h1.project-title").textContent=s(n.title),document.querySelector(".total-tasks").textContent=n.todoLength,document.querySelector(".total-completed-tasks").textContent=n.completedLength,function(n){const t=n.todoTasks;for(const n of t)o.append(A(n))}(n),function(n){const t=n.completedTasks;for(const n of t)r.append(A(n))}(n)}(e)}(n.target)}function c(){e.style.display="none";const o=document.createElement("form");o.classList.add("projectForm"),t.append(o);const r=document.createElement("input");r.type="text",r.placeholder="Enter project",r.classList.add("project-input"),o.append(r);const a=document.createElement("div");a.classList.add("popout-project-btns"),o.append(a);const c=document.createElement("button");c.textContent="Add",c.classList.add("popout-add-project-btn"),c.addEventListener("click",(t=>{!function(t,e){e.preventDefault(),t?C.containsProject(t)?alert("Name is already in use"):(function(t){const e=document.createElement("div");e.classList.add("project"),e.dataset.projectTitle=t.title,n.append(e);const o=document.createElement("div");o.classList.add("project-info"),e.append(o);const r=document.createElement("i");r.classList.add("fa-solid","fa-book-open"),o.append(r);const a=document.createElement("span");a.classList.add("project-title"),a.textContent=s(t.title),o.append(a),e.append(function(){const n=document.createElement("div");n.classList.add("project-buttons");const t=document.createElement("i");return t.classList.add("fa-solid","fa-xmark"),n.append(t),n}())}(new C(t)),i()):alert("Please enter a name for your project")}(r.value,t)})),a.append(c);const A=document.createElement("button");A.textContent="Cancel",A.classList.add("popout-cancel-project-btn"),A.addEventListener("click",i),a.append(A)}function i(){document.querySelector(".projectForm").remove(),e.style.display="flex"}function A(n){const t=document.createElement("div");t.classList.add("card");const e=document.createElement("div");e.classList.add("checkbox"),t.append(e);const o=document.createElement("div");o.classList.add("task-info"),t.append(o);const r=document.createElement("p");if(r.classList.add("task-title"),r.textContent=n.title,o.append(r),n.completed){e.classList.add("checked"),r.classList.add("completed");const n=document.createElement("i");n.classList.add("fa-solid","fa-check"),e.append(n)}return o.append(function(n){const t=document.createElement("div");t.classList.add("task-details");const e=document.createElement("div");e.classList.add("due-date"),t.append(e);const o=document.createElement("i");o.classList.add("fa-solid","fa-calendar"),e.append(o);const r=document.createElement("span");return r.classList.add("day"),r.textContent="due soon",e.append(r),t}()),t}function s(n){return n.split(" ").map((n=>n[0].toUpperCase()+n.slice(1))).join(" ")}return{initListeners:function(){n.addEventListener("click",a),e.addEventListener("click",c)}}})().initListeners()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,